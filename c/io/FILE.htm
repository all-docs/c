<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>FILE</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_io_FILE skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">FILE</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<table class="t-dcl-begin"><tbody>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../header/stdio.htm" title="c/header/stdio"><tt>&lt;stdio.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
<tr class="t-dcl">
<td class="t-dcl-nopad"> <div><span class="mw-geshi c source-c"><span class="kw1">typedef</span> <span class="coMULTI">/* unspecified */</span> FILE<span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td class="t-dcl-nopad">  </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
<p>Each <code>FILE</code> object denotes a C stream.
</p><p>C standard does not specify whether <code>FILE</code> is a complete object type. While it may be possible to copy a valid <code>FILE</code>, using a pointer to such a copy as an argument for an I/O function invokes unspecified behavior. In other words, <code>FILE</code> may be semantically non-copyable.
</p><p>I/O streams can be used for both unformatted and formatted input and output. Furthermore, the functions that handle input and output can also be locale-sensitive, such that wide/multibyte conversions are performed as necessary.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./FILE.htm#Stream_state"><span class="tocnumber">1</span> <span class="toctext">Stream state</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="./FILE.htm#Narrow_and_wide_orientation"><span class="tocnumber">1.1</span> <span class="toctext">Narrow and wide orientation</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="./FILE.htm#Binary_and_text_modes"><span class="tocnumber">1.2</span> <span class="toctext">Binary and text modes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="./FILE.htm#Notes"><span class="tocnumber">2</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="./FILE.htm#References"><span class="tocnumber">3</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="./FILE.htm#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=1" title="Edit section: Stream state">edit</a>]</span> <span class="mw-headline" id="Stream_state">Stream state</span></h3>
<p>Besides the system-specific information necessary to access the device (<i>e.g.,</i> a POSIX file descriptor), each <code>FILE</code> object directly or indirectly holds the following:
</p>
<ol><li> <span class="t-mark-rev t-since-c95">(C95)</span> Character width: unset, narrow, or wide.
</li><li> <span class="t-mark-rev t-since-c95">(C95)</span> Parse state for conversions between multibyte and wide characters (an object of type <span class="t-lc"><a href="../string/multibyte/mbstate_t.htm" title="c/string/multibyte/mbstate t">mbstate_t</a></span>)
</li><li> Buffering state: unbuffered, line-buffered, fully buffered.
</li><li> The buffer, which may be replaced by an external, user-provided buffer.
</li><li> I/O mode: input, output, or update (both input and output).
</li><li> Binary/text mode indicator.
</li><li> End-of-file status indicator.
</li><li> Error status indicator.
</li><li> File position indicator, accessible as an object of type <span class="t-lc"><a href="./fpos_t.htm" title="c/io/fpos t">fpos_t</a></span>, which, for wide streams, includes parse state.
</li><li> <span class="t-mark-rev t-since-c11">(C11)</span> Reentrant lock used to prevent data races when multiple threads read, write, position, or query the position of a stream.
</li></ol>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=2" title="Edit section: Narrow and wide orientation">edit</a>]</span> <span class="mw-headline" id="Narrow_and_wide_orientation">Narrow and wide orientation</span></h4>
<p>A newly opened stream has no orientation. The first call to <span class="t-lc">fwide</span> or to any I/O function establishes the orientation: a wide I/O function makes the stream wide-oriented; a narrow I/O function makes the stream narrow-oriented. Once set, the orientation can be changed with only <span class="t-lc"><a href="./freopen.htm" title="c/io/freopen">freopen</a></span>. Narrow I/O functions cannot be called on a wide-oriented stream; wide I/O functions cannot be called on a narrow-oriented stream. Wide I/O functions convert between wide and multibyte characters as if by calling <span class="t-lc"><a href="../string/multibyte/mbrtowc.htm" title="c/string/multibyte/mbrtowc">mbrtowc</a></span> or <span class="t-lc"><a href="../string/multibyte/wcrtomb.htm" title="c/string/multibyte/wcrtomb">wcrtomb</a></span> with the conversion state as described by the stream. Unlike the multibyte character strings that are valid in a program, multibyte character sequences in the file may contain embedded nulls and do not have to begin or end in the initial shift state.
</p><p>The conversion state of a stream with wide orientation is established by the C locale that is installed at the time the stream's orientation is set.
</p>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=3" title="Edit section: Binary and text modes">edit</a>]</span> <span class="mw-headline" id="Binary_and_text_modes">Binary and text modes</span></h4>
<p>A <i>text stream</i> is an ordered sequence of characters that can be composed into lines; a line can be decomposed into zero or more characters plus a terminating <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> (“newline”) character. Whether the last line requires a terminating <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> is implementation-defined. Furthermore, characters may have to be added, altered, or deleted on input and output to conform to the conventions for representing text in the OS (in particular, C streams on Windows OS convert <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> to <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\r</span><span class="es1">\n</span>'</span></span></span> on output, and convert <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\r</span><span class="es1">\n</span>'</span></span></span> to <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> on input).
</p><p>Data read in from a text stream is guaranteed to compare equal to the data that were earlier written out to that stream only if each of the following is true:
</p>
<ul><li> The data consist of only printing characters and/or the control characters <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\t</span>'</span></span></span> and <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> (in particular, on Windows OS, the character <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es5">\0</span>x1A'</span></span></span> terminates input).
</li><li> No <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> character is immediately preceded by space characters (such space characters may disappear when such output is later read as input).
</li><li> The last character is <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span>.
</li></ul>
<p>A <i>binary stream</i> is an ordered sequence of characters that can transparently record internal data. Data read in from a binary stream always equal the data that were earlier written out to that stream, except that an implementation is allowed to append an indeterminate number of null characters to the end of the stream. A wide binary stream doesn't need to end in the initial shift state.
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=4" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>POSIX explicitly requires that the <code>LC_CTYPE</code> facet of the currently installed C locale be stored within the <code>FILE</code> object the moment the stream's orientation becomes wide; POSIX requires that this <code>LC_CTYPE</code> facet be used for all future I/O on this stream until the orientation is changed, regardless of any subsequent call to <span class="t-lc"><a href="../locale/setlocale.htm" title="c/locale/setlocale">setlocale</a></span>.
</p><p>It is intended that each line of text be composed of data that are essentially human-readable. POSIX implementations do not distinguish between text and binary streams (there is no special mapping for <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'<span class="es1">\n</span>'</span></span></span> or any other characters).
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=5" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-17">
<ul><li> C17 standard (ISO/IEC 9899:2018): 
</li></ul>
<dl><dd><ul><li> 7.21 Input/output &lt;stdio.h&gt; (p: 217-247)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.29 Extended multibyte and wide character utilities &lt;wchar.h&gt; (p: 295-325)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 7.21 Input/output &lt;stdio.h&gt; (p: 296-339)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.29 Extended multibyte and wide character utilities &lt;wchar.h&gt; (p: 402-446)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 7.19 Input/output &lt;stdio.h&gt; (p: 262-305)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.24 Extended multibyte and wide character utilities &lt;wchar.h&gt; (p: 348-392)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 4.9 INPUT/OUTPUT &lt;stdio.h&gt; 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;action=edit&amp;section=6" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./std_streams.htm" title="c/io/std streams"> <span class="t-lines"><span>stdin</span><span>stdout</span><span>stderr</span></span></a></div></div>
</td>
<td>  expression of type <span class="mw-geshi c source-c">FILE<span class="sy2">*</span></span> associated with the input stream<br>expression of type <span class="mw-geshi c source-c">FILE<span class="sy2">*</span></span> associated with the output stream<br>expression of type <span class="mw-geshi c source-c">FILE<span class="sy2">*</span></span> associated with the error output stream <br> <span class="t-mark">(macro constant)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/io/dsc_std_streams&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/io/c/FILE.html" title="cpp/io/c/FILE">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>FILE</span></span></div>
</td></tr>

</tbody></table>

<!-- 
NewPP limit report
Preprocessor visited node count: 5419/1000000
Preprocessor generated node count: 9546/1000000
Post‐expand include size: 164441/4194304 bytes
Template argument size: 28658/4194304 bytes
Highest expansion depth: 20/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:19729-0!*!0!!en!*!* and timestamp 20250317171138 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;oldid=151194">https://en.cppreference.com/mwiki/index.php?title=c/io/FILE&amp;oldid=151194</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.773 secs. -->
	


</body><!-- Cached 20250317171138 --></html>