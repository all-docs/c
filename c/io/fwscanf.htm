<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>wscanf, fwscanf, swscanf, wscanf_s, fwscanf_s, swscanf_s</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_io_fwscanf skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">wscanf, fwscanf, swscanf, wscanf_s, fwscanf_s, swscanf_s</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<table class="t-dcl-begin"><tbody>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../header/wchar.htm" title="c/header/wchar"><tt>&lt;wchar.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
</tbody>
<tbody class="t-dcl-rev t-dcl-rev-num"><tr class="t-dcl-rev-aux">
<td></td>
<td rowspan="142">(1)</td>
<td></td>
</tr>
<tr class="t-dcl t-since-c95 t-until-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> wscanf<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span>format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c95">(since C95)</span> <br><span class="t-mark-rev t-until-c99">(until C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> wscanf<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
</tbody><tbody>
</tbody>
<tbody class="t-dcl-rev t-dcl-rev-num"><tr class="t-dcl-rev-aux">
<td></td>
<td rowspan="142">(2)</td>
<td></td>
</tr>
<tr class="t-dcl t-since-c95 t-until-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> fwscanf<span class="br0">(</span> <a href="./FILE.htm"><span class="kw881">FILE</span></a> <span class="sy2">*</span>stream, <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span>format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c95">(since C95)</span> <br><span class="t-mark-rev t-until-c99">(until C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> fwscanf<span class="br0">(</span> <a href="./FILE.htm"><span class="kw881">FILE</span></a> <span class="sy2">*</span><span class="kw4">restrict</span> stream,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
</tbody><tbody>
</tbody>
<tbody class="t-dcl-rev t-dcl-rev-num"><tr class="t-dcl-rev-aux">
<td></td>
<td rowspan="142">(3)</td>
<td></td>
</tr>
<tr class="t-dcl t-since-c95 t-until-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> swscanf<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span>buffer, <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span>format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c95">(since C95)</span> <br><span class="t-mark-rev t-until-c99">(until C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> swscanf<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> buffer,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ... <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
</tbody><tbody>
<tr class="t-dcl t-since-c11">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> wscanf_s<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (4) </td>
<td> <span class="t-mark-rev t-since-c11">(since C11)</span> </td>
</tr>
<tr class="t-dcl t-since-c11">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> fwscanf_s<span class="br0">(</span> <a href="./FILE.htm"><span class="kw881">FILE</span></a> <span class="sy2">*</span><span class="kw4">restrict</span> stream,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (5) </td>
<td> <span class="t-mark-rev t-since-c11">(since C11)</span> </td>
</tr>
<tr class="t-dcl t-since-c11">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">int</span> swscanf_s<span class="br0">(</span> <span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> s,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">const</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (6) </td>
<td> <span class="t-mark-rev t-since-c11">(since C11)</span> </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
<p>Reads data from the a variety of sources, interprets it according to <code>format</code> and stores the results into given locations.
</p>
<div class="t-li1"><span class="t-li">1)</span> Reads the data from <span class="t-lc"><a href="./std_streams.htm" title="c/io/std streams">stdin</a></span>.</div>
<div class="t-li1"><span class="t-li">2)</span> Reads the data from file stream <code>stream</code>.</div>
<div class="t-li1"><span class="t-li">3)</span> Reads the data from null-terminated wide string <code>buffer</code>. Reaching the end of the string is equivalent to reaching the end-of-file condition for <code>fwscanf</code></div>
<div class="t-li1"><span class="t-li">4-6)</span> Same as <span class="t-v">(1-3)</span>, except that <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>c</span></span>, <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>s</span></span>, and <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span><span class="br0">[</span></span></span> conversion specifiers each expect two arguments (the usual pointer and a value of type <span class="t-lc">rsize_t</span> indicating the size of the receiving array, which may be <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">1</span></span></span> when reading with a <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>lc</span></span> into a single wide character) and except that the following errors are detected at runtime and call the currently installed <a href="../error/set_constraint_handler_s.htm" title="c/error/set constraint handler s">constraint handler</a> function:
<dl><dd><ul><li> any of the arguments of pointer type is a null pointer
</li><li> <code>format</code>, <code>stream</code>, or <code>buffer</code> is a null pointer
</li><li> the number of characters that would be written by <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>c</span></span>, <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>s</span></span>, or <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span><span class="br0">[</span></span></span>, plus the terminating null character, would exceed the second (<code>rsize_t</code>) argument provided for each of those conversion specifiers
</li><li> optionally, any other detectable error, such as unknown conversion specifier
</li></ul>
</dd><dd>As all bounds-checked functions, <code>wscanf_s</code>, <code>fwscanf_s</code>, and <code>swscanf_s</code> are only guaranteed to be available if <span class="t-c"><span class="mw-geshi c source-c">__STDC_LIB_EXT1__</span></span> is defined by the implementation and if the user defines <span class="t-c"><span class="mw-geshi c source-c">__STDC_WANT_LIB_EXT1__</span></span> to the integer constant <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">1</span></span></span> before including <a href="../header/wchar.htm" title="c/header/wchar"><tt>&lt;wchar.h&gt;</tt></a>.</dd></dl></div>

<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./fwscanf.htm#Parameters"><span class="tocnumber">1</span> <span class="toctext">Parameters</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./fwscanf.htm#Return_value"><span class="tocnumber">2</span> <span class="toctext">Return value</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="./fwscanf.htm#Example"><span class="tocnumber">3</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="./fwscanf.htm#References"><span class="tocnumber">4</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="./fwscanf.htm#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit&amp;section=1" title="Edit section: Parameters">edit</a>]</span> <span class="mw-headline" id="Parameters">Parameters</span></h3>
<table class="t-par-begin">


<tbody><tr class="t-par">
<td>  stream
</td>
<td> -
</td>
<td>  input file stream to read from
</td></tr>
<tr class="t-par">
<td>  buffer
</td>
<td> -
</td>
<td>  pointer to a null-terminated wide string to read from
</td></tr>
<tr class="t-par">
<td>  format
</td>
<td> -
</td>
<td>  pointer to a null-terminated wide string specifying how to read the input
</td></tr>
<tr class="t-par">
<td>  ...
</td>
<td> -
</td>
<td>  receiving arguments.
</td></tr></tbody></table>
<p><br>
The <b>format</b> string consists of
</p>
<ul><li> non-whitespace wide characters except <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span></span></span>: each such character in the format string consumes exactly one identical character from the input stream, or causes the function to fail if the next character on the stream does not compare equal.
</li><li> whitespace characters: any single whitespace character in the format string consumes all available consecutive whitespace characters from the input (determined as if by calling <span class="t-lc"><a href="../string/wide/iswspace.htm" title="c/string/wide/iswspace">iswspace</a></span> in a loop). Note that there is no difference between <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"<span class="es1">\n</span>"</span></span></span>, <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">" "</span></span></span>, <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"<span class="es1">\t</span><span class="es1">\t</span>"</span></span></span>, or other whitespace in the format string.
</li><li> conversion specifications. Each conversion specification has the following format:
</li></ul>
<dl><dd><ul><li> introductory <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span></span></span> character.
</li></ul>
</dd></dl>
<dl><dd><ul><li> <span class="t-mark">(optional)</span> assignment-suppressing character <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span></span></span>. If this option is present, the function does not assign the result of the conversion to any receiving argument.
</li></ul>
</dd></dl>
<dl><dd><ul><li> <span class="t-mark">(optional)</span> integer number (greater than zero) that specifies <i>maximum field width</i>, that is, the maximum number of characters that the function is allowed to consume when doing the conversion specified by the current conversion specification. Note that <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>s</span></span> and <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span><span class="br0">[</span></span></span> may lead to buffer overflow if the width is not provided.
</li></ul>
</dd></dl>
<dl><dd><ul><li> <span class="t-mark">(optional)</span> <i>length modifier</i> that specifies the size of the receiving argument, that is, the actual destination type. This affects the conversion accuracy and overflow rules. The default destination type is different for each conversion type (see table below).
</li></ul>
</dd></dl>
<dl><dd><ul><li> conversion format specifier.
</li></ul>
</dd></dl>
<p>The following format specifiers are available:
</p>
<table class="wikitable" style="text-align: center;">

<tbody><tr>
<th>Conversion<br>specifier
</th>
<th>Explanation
</th>
<th colspan="9">Expected<br>Argument type
</th></tr>
<tr>
<th colspan="2" style="text-align: right;">Length Modifier→
</th>
<th><code>hh</code>
</th>
<th><code>h</code>
</th>
<th style="font-size: 0.75em; font-weight: normal; vertical-align: center">none
</th>
<th><code><b>l</b></code>
</th>
<th><code><b>ll</b></code>
</th>
<th><code><b>j</b></code>
</th>
<th><code><b>z</b></code>
</th>
<th><code><b>t</b></code>
</th>
<th><code><b>L</b></code>
</th></tr>
<tr>
<th colspan="2" style="text-align: right;">Only available since C99→
</th>
<th style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes"><span style="font-weight: normal;">Yes</span>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes"><span style="font-weight: normal;">Yes</span>
</th>
<th style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes"><span style="font-weight: normal;">Yes</span>
</th>
<th style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes"><span style="font-weight: normal;">Yes</span>
</th>
<th style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes"><span style="font-weight: normal;">Yes</span>
</th>
<th>
</th></tr>
<tr>
<th><code>%</code>
</th>
<td style="text-align:left;">
<div style="width: 430px;">Matches literal <code><b>%</b></code>.</div>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td></tr>
<tr>
<th><code>c</code>
</th>
<td style="text-align: left;">
<p>Matches a <b>character</b> or a sequence of <b>characters</b>.
</p>
<ul><li> If a width specifier is used, matches exactly <i>width</i> wide characters (the argument must be a pointer to an array with sufficient room).
</li><li> Unlike&nbsp;%s and&nbsp;%[, does not append the null character to the array.
</li></ul>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">char</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="3"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">wchar_t</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td rowspan="3" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td></tr>
<tr>
<th><code>s</code>
</th>
<td style="text-align: left;">
<p>Matches a sequence of non-whitespace characters (a <b>string</b>).
</p>
<ul><li> If width specifier is used, matches up to <i>width</i> or until the first whitespace character, whichever appears first.
</li><li> Always stores a null character in addition to the characters matched (so the argument array must have room for at least <i>width+1</i> characters).
</li></ul>
</td></tr>
<tr>
<th><code>[</code><span class="t-spar">set</span> ﻿<code>]</code>
</th>
<td style="text-align: left;">
<p>Matches a non-empty sequence of character from <span class="t-spar">set</span> of characters.
</p>
<ul><li> If the first character of the set is <code><b>^</b></code>, then all characters not in the set are matched.
</li><li> If the set begins with <code><b>]</b></code> or <code><b>^]</b></code> then the <code><b>]</b></code> character is also included into the set.
</li><li> It is implementation-defined whether the character <code><b>-</b></code> in the non-initial position in the scanset may be indicating a range, as in <code><b>[0-9]</b></code>.
</li><li> If width specifier is used, matches only up to <i>width</i>.
</li><li> Always stores a null character in addition to the characters matched (so the argument array must have room for at least <i>width+1</i> characters).
</li></ul>
</td></tr>
<tr>
<th><code>d</code>
</th>
<td style="text-align: left;">
<p>Matches a <b>decimal integer</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstol.htm" title="c/string/wide/wcstol">wcstol</a></span> with the value <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">10</span></span></span> for the <span class="t-c"><span class="mw-geshi c source-c">base</span></span> argument.
</li></ul>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">signed</span> <span class="kw4">char</span><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">signed</span> <span class="kw4">short</span><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><span class="kw4">unsigned</span> <span class="kw4">short</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">signed</span> <span class="kw4">int</span><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">signed</span> <span class="kw4">long</span><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">signed</span> <span class="kw4">long</span> <span class="kw4">long</span><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><span class="kw4">unsigned</span> <span class="kw4">long</span> <span class="kw4">long</span><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><a href="../types/integer.htm"><span class="kw118">intmax_t</span></a><span class="sy2">*</span></span> or <span class="mw-geshi c source-c"><a href="../types/integer.htm"><span class="kw132">uintmax_t</span></a><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><a href="../types/size_t.htm"><span class="kw100">size_t</span></a><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6"><div class="t-vertical"><div><span class="mw-geshi c source-c"><a href="../types/ptrdiff_t.htm"><span class="kw101">ptrdiff_t</span></a><span class="sy2">*</span></span></div></div>
</td>
<td rowspan="6" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td></tr>
<tr>
<th><code>i</code>
</th>
<td style="text-align: left;">
<p>Matches an <b>integer</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstol.htm" title="c/string/wide/wcstol">wcstol</a></span> with the value <span class="t-c"><span class="mw-geshi c source-c">​<span class="nu0">0</span>​</span></span> for the <span class="t-c"><span class="mw-geshi c source-c">base</span></span> argument (base is determined by the first characters parsed).
</li></ul>
</td></tr>
<tr>
<th><code>u</code>
</th>
<td style="text-align: left;">
<p>Matches an unsigned <b>decimal integer</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstoul.htm" title="c/string/wide/wcstoul">wcstoul</a></span> with the value <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">10</span></span></span> for the <span class="t-c"><span class="mw-geshi c source-c">base</span></span> argument.
</li></ul>
</td></tr>
<tr>
<th><code>o</code>
</th>
<td style="text-align: left;">
<p>Matches an unsigned <b>octal integer</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstoul.htm" title="c/string/wide/wcstoul">wcstoul</a></span> with the value <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">8</span></span></span> for the <span class="t-c"><span class="mw-geshi c source-c">base</span></span> argument.
</li></ul>
</td></tr>
<tr>
<th><code>x</code><br><code>X</code>
</th>
<td style="text-align: left;">
<p>Matches an unsigned <b>hexadecimal integer</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstoul.htm" title="c/string/wide/wcstoul">wcstoul</a></span> with the value <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">16</span></span></span> for the <span class="t-c"><span class="mw-geshi c source-c">base</span></span> argument.
</li></ul>
</td></tr>
<tr>
<th><code>n</code>
</th>
<td style="text-align: left;">
<p>Returns the <b>number of characters read so far</b>.
</p>
<ul><li> No input is consumed. Does not increment the assignment count.
</li><li> If the specifier has assignment-suppressing operator defined, the behavior is undefined.
</li></ul>
</td></tr>
<tr>
<th><code>a</code> <span class="t-mark-rev t-since-c99">(C99)</span><br><code>A</code> <span class="t-mark-rev t-since-c99">(C99)</span><br><code>e</code><br><code>E</code><br><code>f</code><br><code>F</code> <span class="t-mark-rev t-since-c99">(C99)</span><br><code>g</code><br><code>G</code>
</th>
<td style="text-align: left;">
<p>Matches a <b>floating-point number</b>.
</p>
<ul><li> The format of the number is the same as expected by <span class="t-lc"><a href="../string/wide/wcstof.htm" title="c/string/wide/wcstof">wcstof</a></span>.
</li></ul>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">float</span><span class="sy2">*</span></span></div></div>
</td>
<td><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">double</span><span class="sy2">*</span></span></div></div>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">long</span> <span class="kw4">double</span><span class="sy2">*</span></span></div></div>
</td></tr>
<tr>
<th><code>p</code>
</th>
<td style="text-align: left;">
<p>Matches implementation defined character sequence defining a <b>pointer</b>.
</p>
<ul><li> <code>printf</code> family of functions should produce the same sequence using <code><b>%p</b></code> format specifier.
</li></ul>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td><div class="t-vertical"><div><span class="mw-geshi c source-c"><span class="kw4">void</span><span class="sy2">**</span></span></div></div>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"> <small>N/A</small>
</td></tr>
<tr>
<th colspan="11">Notes
</th></tr>
<tr>
<td colspan="11" style="text-align: start;">
<p>For every conversion specifier other than <span class="t-c"><span class="mw-geshi c source-c">n</span></span>, the longest sequence of input characters which does not exceed any specified ﬁeld width and which either is exactly what the conversion specifier expects or is a prefix of a sequence it would expect, is what's consumed from the stream. The ﬁrst character, if any, after this consumed sequence remains unread. If the consumed sequence has length zero or if the consumed sequence cannot be converted as specified above, the matching failure occurs unless end-of-ﬁle, an encoding error, or a read error prevented input from the stream, in which case it is an input failure.
</p><p>All conversion specifiers other than <span class="t-c"><span class="mw-geshi c source-c"><span class="br0">[</span></span></span>, <span class="t-c"><span class="mw-geshi c source-c">c</span></span>, and <span class="t-c"><span class="mw-geshi c source-c">n</span></span> consume and discard all leading whitespace characters (determined as if by calling <span class="t-lc"><a href="../string/wide/iswspace.htm" title="c/string/wide/iswspace">iswspace</a></span>) before attempting to parse the input. These consumed characters do not count towards the specified maximum field width.
</p><p>If the length specifier <span class="t-c"><span class="mw-geshi c source-c">l</span></span> is not used, the conversion specifiers <span class="t-c"><span class="mw-geshi c source-c">c</span></span>, <span class="t-c"><span class="mw-geshi c source-c">s</span></span>, and <span class="t-c"><span class="mw-geshi c source-c"><span class="br0">[</span></span></span> perform wide-to-multibyte character conversion as if by calling <span class="t-lc"><a href="../string/multibyte/wcrtomb.htm" title="c/string/multibyte/wcrtomb">wcrtomb</a></span> with an <span class="t-lc"><a href="../string/multibyte/mbstate_t.htm" title="c/string/multibyte/mbstate t">mbstate_t</a></span> object initialized to zero before the first character is converted.
</p><p>The conversion specifiers <span class="t-c"><span class="mw-geshi c source-c">s</span></span> and <span class="t-c"><span class="mw-geshi c source-c"><span class="br0">[</span></span></span> always store the null terminator in addition to the matched characters. The size of the destination array must be at least one greater than the specified field width. The use of <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>s</span></span> or <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span><span class="br0">[</span></span></span>, without specifying the destination array size, is as unsafe as <span class="t-lc"><a href="./gets.htm" title="c/io/gets">gets</a></span>.
</p><p>The correct conversion specifications for the <a href="../types/integer.htm" title="c/types/integer">fixed-width integer types</a> (<span class="t-lc"><a href="../types/integer.htm" title="c/types/integer">int8_t</a></span>, etc) are defined in the header <a href="../types/integer.htm" title="c/types/integer"><code>&lt;inttypes.h&gt;</code></a> (although <a href="../types/integer.htm" title="c/types/integer"><tt>SCNdMAX</tt></a>, <a href="../types/integer.htm" title="c/types/integer"><tt>SCNuMAX</tt></a>, etc is synonymous with <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>jd</span></span>, <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>ju</span></span>, etc).
</p><p>There is a <a href="../language/eval_order.htm" title="c/language/eval order">sequence point</a> after the action of each conversion specifier; this permits storing multiple fields in the same “sink” variable.
</p><p>When parsing an incomplete floating-point value that ends in the exponent with no digits, such as parsing <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"100er"</span></span></span> with the conversion specifier <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">%</span>f</span></span>, the sequence <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"100e"</span></span></span> (the longest prefix of a possibly valid floating-point number) is consumed, resulting in a matching error (the consumed sequence cannot be converted to a floating-point number), with <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"r"</span></span></span> remaining. Some existing implementations do not follow this rule and roll back to consume only <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"100"</span></span></span>, leaving <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"er"</span></span></span>, e.g., <a rel="nofollow" class="external text" href="https://sourceware.org/bugzilla/show_bug.cgi?id=1765">glibc bug 1765</a>.
</p><p>If a conversion specification is invalid, the behavior is undefined.
</p>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit&amp;section=2" title="Edit section: Return value">edit</a>]</span> <span class="mw-headline" id="Return_value">Return value</span></h3>
<div class="t-li1"><span class="t-li">1-3)</span> Number of receiving arguments successfully assigned, or <span class="t-lc"><a href="../io.htm" title="c/io">EOF</a></span> if read failure occurs before the first receiving argument was assigned.</div>
<div class="t-li1"><span class="t-li">4-6)</span> Same as <span class="t-v">(1-3)</span>, except that <span class="t-lc"><a href="../io.htm" title="c/io">EOF</a></span> is also returned if there is a runtime constraint violation.</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit&amp;section=3" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#include &lt;stdio.h&gt;</span>
<span class="co2">#include &lt;wchar.h&gt;</span>
<span class="co2">#include &lt;string.h&gt;</span>
&nbsp;
<span class="co2">#define NUM_VARS   3</span>
<span class="co2">#define ERR_READ   2</span>
<span class="co2">#define ERR_WRITE  3</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw4">wchar_t</span> state<span class="br0">[</span><span class="nu0">64</span><span class="br0">]</span><span class="sy4">;</span>
    <span class="kw4">wchar_t</span> capital<span class="br0">[</span><span class="nu0">64</span><span class="br0">]</span><span class="sy4">;</span>
    <span class="kw4">unsigned</span> <span class="kw4">int</span> population <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="kw4">int</span> elevation <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="kw4">int</span> age <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="kw4">float</span> pi <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
&nbsp;
<span class="co2">#if INTERACTIVE_MODE</span>
    <a href="./fwprintf.htm"><span class="kw862">wprintf</span></a><span class="br0">(</span>L<span class="st0">"Enter state, age, and pi value: "</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw1">if</span> <span class="br0">(</span>wscanf<span class="br0">(</span>L<span class="st0">"%ls%d%f"</span>, state, <span class="sy3">&amp;</span>age, <span class="sy3">&amp;</span>pi<span class="br0">)</span> <span class="sy3">!</span><span class="sy1">=</span> NUM_VARS<span class="br0">)</span> <span class="br0">{</span>
        <a href="./fprintf.htm"><span class="kw852">fprintf</span></a><span class="br0">(</span><a href="./std_streams.htm"><span class="kw885">stderr</span></a>, <span class="st0">"Error reading input.<span class="es1">\n</span>"</span><span class="br0">)</span><span class="sy4">;</span>
        <span class="kw1">return</span> ERR_READ<span class="sy4">;</span>
    <span class="br0">}</span>
<span class="co2">#else</span>
    <span class="kw4">wchar_t</span><span class="sy2">*</span> input <span class="sy1">=</span> L<span class="st0">"California 170 3.141592"</span><span class="sy4">;</span>
    <span class="kw1">if</span> <span class="br0">(</span>swscanf<span class="br0">(</span>input, L<span class="st0">"%ls%d%f"</span>, state, <span class="sy3">&amp;</span>age, <span class="sy3">&amp;</span>pi<span class="br0">)</span> <span class="sy3">!</span><span class="sy1">=</span> NUM_VARS<span class="br0">)</span> <span class="br0">{</span>
        <a href="./fprintf.htm"><span class="kw852">fprintf</span></a><span class="br0">(</span><a href="./std_streams.htm"><span class="kw885">stderr</span></a>, <span class="st0">"Error reading input.<span class="es1">\n</span>"</span><span class="br0">)</span><span class="sy4">;</span>
        <span class="kw1">return</span> ERR_READ<span class="sy4">;</span>
    <span class="br0">}</span>
<span class="co2">#endif</span>
    <a href="./fwprintf.htm"><span class="kw862">wprintf</span></a><span class="br0">(</span>L<span class="st0">"State:&nbsp;%ls<span class="es1">\n</span>Age &nbsp;:&nbsp;%d years<span class="es1">\n</span>Pi  &nbsp;:&nbsp;%.5f<span class="es1">\n</span><span class="es1">\n</span>"</span>, state, age, pi<span class="br0">)</span><span class="sy4">;</span>
&nbsp;
    <a href="./FILE.htm"><span class="kw881">FILE</span></a><span class="sy2">*</span> fp <span class="sy1">=</span> <a href="./tmpfile.htm"><span class="kw879">tmpfile</span></a><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw1">if</span> <span class="br0">(</span>fp<span class="br0">)</span> <span class="br0">{</span>
        <span class="co1">// write some data to temp file</span>
        <span class="kw1">if</span> <span class="br0">(</span><span class="sy3">!</span><a href="./fwprintf.htm"><span class="kw863">fwprintf</span></a><span class="br0">(</span>fp, L<span class="st0">"Mississippi Jackson 420000 807"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
            <a href="./fprintf.htm"><span class="kw852">fprintf</span></a><span class="br0">(</span><a href="./std_streams.htm"><span class="kw885">stderr</span></a>, <span class="st0">"Error writing to file.<span class="es1">\n</span>"</span><span class="br0">)</span><span class="sy4">;</span>
            <a href="./fclose.htm"><span class="kw822">fclose</span></a><span class="br0">(</span>fp<span class="br0">)</span><span class="sy4">;</span>
            <span class="kw1">return</span> ERR_WRITE<span class="sy4">;</span>
        <span class="br0">}</span>
        <span class="co1">// rewind file pointer</span>
        <a href="./rewind.htm"><span class="kw872">rewind</span></a><span class="br0">(</span>fp<span class="br0">)</span><span class="sy4">;</span>
&nbsp;
        <span class="co1">// read data into variables</span>
        fwscanf<span class="br0">(</span>fp, L<span class="st0">"%ls%ls%u%d"</span>, state, capital, <span class="sy3">&amp;</span>population, <span class="sy3">&amp;</span>elevation<span class="br0">)</span><span class="sy4">;</span>
        <a href="./fwprintf.htm"><span class="kw862">wprintf</span></a><span class="br0">(</span>L<span class="st0">"State &nbsp;:&nbsp;%ls<span class="es1">\n</span>Capital:&nbsp;%ls<span class="es1">\n</span>Jackson population (in 2020):&nbsp;%u<span class="es1">\n</span>"</span>
                L<span class="st0">"Highest elevation:&nbsp;%dft<span class="es1">\n</span>"</span>,
                state, capital, population, elevation<span class="br0">)</span><span class="sy4">;</span>
        <a href="./fclose.htm"><span class="kw822">fclose</span></a><span class="br0">(</span>fp<span class="br0">)</span><span class="sy4">;</span>
    <span class="br0">}</span>
<span class="br0">}</span></pre></div></div>
<p>Possible output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">State: California
Age &nbsp;: 170 years
Pi  &nbsp;: 3.14159
&nbsp;
State &nbsp;: Mississippi
Capital: Jackson
Jackson population (in 2020): 420000
Highest elevation: 807ft</pre></div></div> 
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit&amp;section=4" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 7.29.2.2 The fwscanf function (p: 410-416)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.29.2.4 The swscanf function (p: 417)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.29.2.12 The wscanf function (p: 421)
</li></ul>
</dd></dl>
<dl><dd><ul><li> K.3.9.1.2 The fwscanf_s function (p: 628-629)
</li></ul>
</dd></dl>
<dl><dd><ul><li> K.3.9.1.5 The swscanf_s function (p: 631)
</li></ul>
</dd></dl>
<dl><dd><ul><li> K.3.9.1.14 The wscanf_s function (p: 638)
</li></ul>
</dd></dl>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 7.24.2.2 The fwscanf function (p: 356-362)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.24.2.4 The swscanf function (p: 362)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.24.2.12 The wscanf function (p: 366-367)
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;action=edit&amp;section=5" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./vfwscanf.htm" title="c/io/vfwscanf"> <span class="t-lines"><span>vwscanf</span><span>vfwscanf</span><span>vswscanf</span><span>vwscanf_s</span><span>vfwscanf_s</span><span>vswscanf_s</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c11">(C11)</span></span><span><span class="t-mark-rev t-since-c11">(C11)</span></span><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   reads formatted wide character input from <span class="t-lc"><a href="./std_streams.htm" title="c/io/std streams">stdin</a></span>, a file stream<br> or a buffer using variable argument list <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/io/dsc_vfwscanf&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/io/c/fwscanf.html" title="cpp/io/c/fwscanf">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>wscanf</span>, <span>fwscanf</span>, <span>swscanf</span></span></div>
</td></tr>

</tbody></table></div>

<!-- 
NewPP limit report
Preprocessor visited node count: 8774/1000000
Preprocessor generated node count: 13770/1000000
Post‐expand include size: 213427/4194304 bytes
Template argument size: 39770/4194304 bytes
Highest expansion depth: 20/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:6226-0!*!0!!en!*!* and timestamp 20250317180438 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;oldid=140800">https://en.cppreference.com/mwiki/index.php?title=c/io/fwscanf&amp;oldid=140800</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 2.236 secs. -->
	


</body><!-- Cached 20250317180438 --></html>