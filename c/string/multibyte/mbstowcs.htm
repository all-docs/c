<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>mbstowcs, mbstowcs_s</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit">
<link rel="shortcut icon" href="../../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--><style>.t-lines > span { display: table-row; }</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_string_multibyte_mbstowcs skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">mbstowcs, mbstowcs_s</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<table class="t-dcl-begin"><tbody>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../../header/stdlib.htm" title="c/header/stdlib"><tt>&lt;stdlib.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
</tbody>
<tbody class="t-dcl-rev t-dcl-rev-num"><tr class="t-dcl-rev-aux">
<td></td>
<td rowspan="142">(1)</td>
<td></td>
</tr>
<tr class="t-dcl t-until-c99">
<td> <div><span class="mw-geshi c source-c"><a href="../../types/size_t.htm"><span class="kw100">size_t</span></a> mbstowcs<span class="br0">(</span> <span class="kw4">wchar_t</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy2">*</span>dst, <span class="kw4">const</span> <span class="kw4">char</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy2">*</span>src, <a href="../../types/size_t.htm"><span class="kw100">size_t</span></a> len<span class="br0">)</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-until-c99">(until C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><a href="../../types/size_t.htm"><span class="kw100">size_t</span></a> mbstowcs<span class="br0">(</span> <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> dst, <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy2">*</span><span class="kw4">restrict</span> src, <a href="../../types/size_t.htm"><span class="kw100">size_t</span></a> len<span class="br0">)</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
</tbody><tbody>
<tr class="t-dcl t-since-c11">
<td> <div><span class="mw-geshi c source-c">errno_t mbstowcs_s<span class="br0">(</span><a href="../../types/size_t.htm"><span class="kw100">size_t</span></a> <span class="sy2">*</span><span class="kw4">restrict</span> retval, <span class="kw4">wchar_t</span> <span class="sy2">*</span><span class="kw4">restrict</span> dst,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rsize_t dstsz, <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy2">*</span><span class="kw4">restrict</span> src, rsize_t len<span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (2) </td>
<td> <span class="t-mark-rev t-since-c11">(since C11)</span> </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
<div class="t-li1"><span class="t-li">1)</span> Converts a multibyte character string from the array whose first element is pointed to by <code>src</code> to its wide character representation. Converted characters are stored in the successive elements of the array pointed to by <code>dst</code>. No more than <code>len</code> wide characters are written to the destination array.</div>
<div class="t-li1"><span class="t-li"></span> Each character is converted as if by a call to <span class="t-lc"><a href="./mbtowc.htm" title="c/string/multibyte/mbtowc">mbtowc</a></span>, except that the mbtowc conversion state is unaffected. The conversion stops if:</div>
<div class="t-li1"><span class="t-li"></span> * The multibyte null character was converted and stored.</div>
<div class="t-li1"><span class="t-li"></span> * An invalid (in the current C locale) multibyte character was encountered.</div>
<div class="t-li1"><span class="t-li"></span> * The next wide character to be stored would exceed <code>len</code>.</div>
<div class="t-li1"><span class="t-li"></span> If <code>src</code> and <code>dst</code> overlap, the behavior is undefined</div>
<div class="t-li1"><span class="t-li">2)</span> Same as <span class="t-v">(1)</span>, except that</div>
<div class="t-li1"><span class="t-li"></span> * conversion is as-if by <span class="t-lc"><a href="./mbrtowc.htm" title="c/string/multibyte/mbrtowc">mbrtowc</a></span>, not <span class="t-lc"><a href="./mbtowc.htm" title="c/string/multibyte/mbtowc">mbtowc</a></span></div>
<div class="t-li1"><span class="t-li"></span> * the function returns its result as an out-parameter <code>retval</code></div>
<div class="t-li1"><span class="t-li"></span> * if no null character was written to <code>dst</code> after <code>len</code> wide characters were written, then <span class="t-c"><span class="mw-geshi c source-c">L<span class="st0">'<span class="es5">\0</span>'</span></span></span> is stored in <code>dst[len]</code>, which means len+1 total wide characters are written</div>
<div class="t-li1"><span class="t-li"></span> * if <code>dst</code> is a null pointer, the number of wide characters that would be produced is stored in <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span>retval</span></span></div>
<div class="t-li1"><span class="t-li"></span> * the function clobbers the destination array from the terminating null and until <code>dstsz</code></div>
<div class="t-li1"><span class="t-li"></span> * If <code>src</code> and <code>dst</code> overlap, the behavior is unspecified.</div>
<div class="t-li1"><span class="t-li"></span> * the following errors are detected at runtime and call the currently installed <a href="../../error/set_constraint_handler_s.htm" title="c/error/set constraint handler s">constraint handler</a> function:
<dl><dd><ul><li> <code>retval</code> or <code>src</code> is a null pointer
</li><li> <code>dstsz</code> or <code>len</code> is greater than <span class="t-lc">RSIZE_MAX/sizeof(wchar_t)</span> (unless <code>dst</code> is null)
</li><li> <code>dstsz</code> is not zero (unless <code>dst</code> is null)
</li><li> There is no null character in the first <code>dstsz</code> multibyte characters in the <code>src</code> array and <code>len</code> is greater than <code>dstsz</code> (unless <code>dst</code> is null)
</li></ul>
</dd><dd>As with all bounds-checked functions, <code>mbstowcs_s</code> is only guaranteed to be available if <span class="t-c"><span class="mw-geshi c source-c">__STDC_LIB_EXT1__</span></span> is defined by the implementation and if the user defines <span class="t-c"><span class="mw-geshi c source-c">__STDC_WANT_LIB_EXT1__</span></span> to the integer constant <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">1</span></span></span> before including <a href="../../header/stdlib.htm" title="c/header/stdlib"><tt>&lt;stdlib.h&gt;</tt></a>.</dd></dl></div>

<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./mbstowcs.htm#Notes"><span class="tocnumber">1</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./mbstowcs.htm#Parameters"><span class="tocnumber">2</span> <span class="toctext">Parameters</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="./mbstowcs.htm#Return_value"><span class="tocnumber">3</span> <span class="toctext">Return value</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="./mbstowcs.htm#Example"><span class="tocnumber">4</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="./mbstowcs.htm#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="./mbstowcs.htm#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=1" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>In most implementations, <code>mbstowcs</code> updates a global static object of type <span class="t-lc"><a href="./mbstate_t.htm" title="c/string/multibyte/mbstate t">mbstate_t</a></span> as it processes through the string, and cannot be called simultaneously by two threads, <span class="t-lc"><a href="./mbsrtowcs.htm" title="c/string/multibyte/mbsrtowcs">mbsrtowcs</a></span> should be used in such cases.
</p><p>POSIX specifies a common extension: if <code>dst</code> is a null pointer, this function returns the number of wide characters that would be written to <code>dst</code>, if converted. Similar behavior is standard for <code>mbstowcs_s</code> and for <span class="t-lc"><a href="./mbsrtowcs.htm" title="c/string/multibyte/mbsrtowcs">mbsrtowcs</a></span>.
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=2" title="Edit section: Parameters">edit</a>]</span> <span class="mw-headline" id="Parameters">Parameters</span></h3>
<table class="t-par-begin">


<tbody><tr class="t-par">
<td>  dst
</td>
<td> -
</td>
<td>  pointer to wide character array where the wide string will be stored
</td></tr>
<tr class="t-par">
<td>  src
</td>
<td> -
</td>
<td>  pointer to the first element of a null-terminated multibyte string to convert
</td></tr>
<tr class="t-par">
<td>  len
</td>
<td> -
</td>
<td>  number of wide characters available in the array pointed to by dst
</td></tr>
<tr class="t-par">
<td>  dstsz
</td>
<td> -
</td>
<td>  max number of wide characters that will be written (size of the <code>dst</code> array)
</td></tr>
<tr class="t-par">
<td>  retval
</td>
<td> -
</td>
<td>  pointer to a size_t object where the result will be stored
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=3" title="Edit section: Return value">edit</a>]</span> <span class="mw-headline" id="Return_value">Return value</span></h3>
<div class="t-li1"><span class="t-li">1)</span> On success, returns the number of wide characters, excluding the terminating <span class="t-c"><span class="mw-geshi c source-c">L<span class="st0">'<span class="es5">\0</span>'</span></span></span>, written to the destination array. On conversion error (if invalid multibyte character was encountered), returns <span class="t-c"><span class="mw-geshi c source-c"><span class="br0">(</span><a href="../../types/size_t.htm"><span class="kw100">size_t</span></a><span class="br0">)</span><span class="sy2">-</span><span class="nu0">1</span></span></span>.</div>
<div class="t-li1"><span class="t-li">2)</span> zero on success (in which case the number of wide characters excluding terminating zero that were, or would be written to <code>dst</code>, is stored in <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span>retval</span></span>), non-zero on error. In case of a runtime constraint violation, stores <span class="t-c"><span class="mw-geshi c source-c"><span class="br0">(</span><a href="../../types/size_t.htm"><span class="kw100">size_t</span></a><span class="br0">)</span><span class="sy2">-</span><span class="nu0">1</span></span></span> in <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span>retval</span></span> (unless <code>retval</code> is null) and sets <span class="t-c"><span class="mw-geshi c source-c">dst<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span></span></span> to <span class="t-c"><span class="mw-geshi c source-c">L<span class="st0">'<span class="es5">\0</span>'</span></span></span> (unless <code>dst</code> is null or <code>dstmax</code> is zero or greater than <span class="t-lc">RSIZE_MAX</span>)</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=4" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#include &lt;stdio.h&gt;</span>
<span class="co2">#include &lt;locale.h&gt;</span>
<span class="co2">#include &lt;stdlib.h&gt;</span>
<span class="co2">#include &lt;wchar.h&gt;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>
<span class="br0">{</span>
    <a href="../../locale/setlocale.htm"><span class="kw900">setlocale</span></a><span class="br0">(</span><a href="../../locale/LC_categories.htm"><span class="kw903">LC_ALL</span></a>, <span class="st0">"en_US.utf8"</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> mbstr <span class="sy1">=</span> u8<span class="st0">"z<span class="es3">\u00df</span><span class="es3">\u6c34</span><span class="es4">\U0001F34C</span>"</span><span class="sy4">;</span> <span class="co1">// or u8"zß水🍌"</span>
    <span class="kw4">wchar_t</span> wstr<span class="br0">[</span><span class="nu0">5</span><span class="br0">]</span><span class="sy4">;</span>
    mbstowcs<span class="br0">(</span>wstr, mbstr, <span class="nu0">5</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fwprintf.htm"><span class="kw864">wprintf</span></a><span class="br0">(</span>L<span class="st0">"MB string:&nbsp;%s<span class="es1">\n</span>"</span>, mbstr<span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fwprintf.htm"><span class="kw864">wprintf</span></a><span class="br0">(</span>L<span class="st0">"Wide string:&nbsp;%ls<span class="es1">\n</span>"</span>, wstr<span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span></pre></div></div>
<p>Output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">MB string: zß水🍌
Wide string: zß水🍌</pre></div></div> 
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=5" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 7.22.8.1 The mbstowcs function (p: 359)
</li></ul>
</dd></dl>
<dl><dd><ul><li> K.3.6.5.1 The mbstowcs_s function (p: 611-612)
</li></ul>
</dd></dl>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 7.20.8.1 The mbstowcs function (p: 323)
</li></ul>
</dd></dl>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 4.10.8.1 The mbstowcs function 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;action=edit&amp;section=6" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./mbsrtowcs.htm" title="c/string/multibyte/mbsrtowcs"> <span class="t-lines"><span>mbsrtowcs</span><span>mbsrtowcs_s</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c95">(C95)</span></span><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   converts a narrow multibyte character string to wide string, given state <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/string/multibyte/dsc_mbsrtowcs&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./wcstombs.htm" title="c/string/multibyte/wcstombs"> <span class="t-lines"><span>wcstombs</span><span>wcstombs_s</span></span></a></div><div><span class="t-lines"><span></span><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   converts a wide string to narrow multibyte character string <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/string/multibyte/dsc_wcstombs&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/string/multibyte/mbstowcs.html" title="cpp/string/multibyte/mbstowcs">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>mbstowcs</span></span></div>
</td></tr>

</tbody></table></div>
</div>

<!-- 
NewPP limit report
Preprocessor visited node count: 4172/1000000
Preprocessor generated node count: 10121/1000000
Post‐expand include size: 102477/4194304 bytes
Template argument size: 19432/4194304 bytes
Highest expansion depth: 20/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:6113-0!*!0!!en!*!* and timestamp 20250317165731 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;oldid=102011">https://en.cppreference.com/mwiki/index.php?title=c/string/multibyte/mbstowcs&amp;oldid=102011</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.751 secs. -->
	


</body><!-- Cached 20250317165731 --></html>