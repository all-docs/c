<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>Variadic arguments</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--><style>.t-lines > span { display: table-row; }</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_language_variadic skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">Variadic arguments</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<p>Variadic functions are functions that may be called with different number of arguments. 
</p><p>Only prototyped <a href="./function_declaration.htm" title="c/language/function declaration">function declarations</a> may be variadic. This is indicated by the parameter of the form <span class="t-c"><span class="mw-geshi c source-c">...</span></span> which must appear last in the parameter list<span class="t-rev-inl t-until-c23"><span> and must follow at least one named parameter</span><span><span class="t-mark-rev t-until-c23">(until C23)</span></span></span>. The ellipsis parameter and the proceeding parameter must be delimited by <span class="t-c"><span class="mw-geshi c source-c">,</span></span>.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// Prototyped declaration</span>
<span class="kw4">int</span> printx<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> fmt, ...<span class="br0">)</span><span class="sy4">;</span> <span class="co1">// function declared this way</span>
printx<span class="br0">(</span><span class="st0">"hello world"</span><span class="br0">)</span><span class="sy4">;</span>     <span class="co1">// may be called with one</span>
printx<span class="br0">(</span><span class="st0">"a=%d b=%d"</span>, a, b<span class="br0">)</span><span class="sy4">;</span> <span class="co1">// or more arguments</span>
&nbsp;
<span class="kw4">int</span> printz<span class="br0">(</span>...<span class="br0">)</span><span class="sy4">;</span> <span class="co1">// OK since C23 and in C++</span>
<span class="co1">// Error until C23: ... must follow at least one named parameter</span>
&nbsp;
<span class="co1">// int printy(..., const char* fmt); // Error: ... must be the last</span>
<span class="co1">// int printa(const char* fmt...);   // Error in C: ',' is required; OK in C++</span></pre></div></div>
<p>At the <a href="./operator_other.htm#Function_call" title="c/language/operator other">function call</a>, each argument that is a part of the variable argument list undergoes special implicit conversions known as <a href="./conversion.htm#Default_argument_promotions" title="c/language/conversion">default argument promotions</a>.
</p><p>Within the body of a function that uses variadic arguments, the values of these arguments may be accessed using the <a href="../variadic.htm" title="c/variadic"><code>&lt;stdarg.h&gt;</code> library facilities</a>:
</p>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc-header">
<td colspan="2"> <div>Defined in header <code><a href="../header/stdarg.htm" title="c/header/stdarg"><tt>&lt;stdarg.h&gt;</tt></a></code> </div>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../variadic/va_start.htm" title="c/variadic/va start"> <span class="t-lines"><span>va_start</span></span></a></div></div>
</td>
<td>   enables access to variadic function arguments <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/variadic/dsc_va_start&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../variadic/va_arg.htm" title="c/variadic/va arg"> <span class="t-lines"><span>va_arg</span></span></a></div></div>
</td>
<td>   accesses the next variadic function argument <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/variadic/dsc_va_arg&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../variadic/va_copy.htm" title="c/variadic/va copy"> <span class="t-lines"><span>va_copy</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c99">(C99)</span></span></span></div></div>
</td>
<td>   makes a copy of the variadic function arguments  <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/variadic/dsc_va_copy&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../variadic/va_end.htm" title="c/variadic/va end"> <span class="t-lines"><span>va_end</span></span></a></div></div>
</td>
<td>   ends traversal of the variadic function arguments <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/variadic/dsc_va_end&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../variadic/va_list.htm" title="c/variadic/va list"> <span class="t-lines"><span>va_list</span></span></a></div></div>
</td>
<td>  holds the information needed by <span class="t-lc">va_start</span>, <span class="t-lc">va_arg</span>, <span class="t-lc">va_end</span>, and <span class="t-lc">va_copy</span> <br> <span class="t-mark">(typedef)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/variadic/dsc_va_list&amp;action=edit">[edit]</a></span>
</td></tr>
</tbody></table>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./variadic.htm#Notes"><span class="tocnumber">1</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./variadic.htm#Example"><span class="tocnumber">2</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="./variadic.htm#References"><span class="tocnumber">3</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="./variadic.htm#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit&amp;section=1" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>Although old-style (prototype-less) <a href="./function_declaration.htm" title="c/language/function declaration">function declarations</a> allow the subsequent function calls to use any number of arguments, they are not allowed to be variadic (as of C89). The definition of such function must specify a fixed number of parameters and cannot use the <code>stdarg.h</code> macros.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// old-style declaration, removed in C23</span>
<span class="kw4">int</span> printx<span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span> <span class="co1">// function declared this way</span>
printx<span class="br0">(</span><span class="st0">"hello world"</span><span class="br0">)</span><span class="sy4">;</span>     <span class="co1">// may be called with one</span>
printx<span class="br0">(</span><span class="st0">"a=%d b=%d"</span>, a, b<span class="br0">)</span><span class="sy4">;</span> <span class="co1">// or more arguments</span>
<span class="co1">// the behavior of at least one of these calls is undefined, depending on</span>
<span class="co1">// the number of parameters the function is defined to take</span></pre></div></div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit&amp;section=2" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#include &lt;stdio.h&gt;</span>
<span class="co2">#include &lt;time.h&gt;</span>
<span class="co2">#include &lt;stdarg.h&gt;</span>
&nbsp;
<span class="kw4">void</span> tlog<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> fmt,...<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">char</span> msg<span class="br0">[</span><span class="nu0">50</span><span class="br0">]</span><span class="sy4">;</span>
    <a href="../chrono/strftime.htm"><span class="kw517">strftime</span></a><span class="br0">(</span>msg, <span class="kw4">sizeof</span> msg, <span class="st0">"%T"</span>, <a href="../chrono/localtime.htm"><span class="kw520">localtime</span></a><span class="br0">(</span><span class="sy3">&amp;</span><span class="br0">(</span><a href="../chrono/time_t.htm"><span class="kw524">time_t</span></a><span class="br0">)</span><span class="br0">{</span><a href="../chrono/time.htm"><span class="kw513">time</span></a><span class="br0">(</span><a href="../types/NULL.htm"><span class="kw103">NULL</span></a><span class="br0">)</span><span class="br0">}</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../io/fprintf.htm"><span class="kw851">printf</span></a><span class="br0">(</span><span class="st0">"[%s] "</span>, msg<span class="br0">)</span><span class="sy4">;</span>
    va_list args<span class="sy4">;</span>
    va_start<span class="br0">(</span>args, fmt<span class="br0">)</span><span class="sy4">;</span>
    <a href="../io/vfprintf.htm"><span class="kw855">vprintf</span></a><span class="br0">(</span>fmt, args<span class="br0">)</span><span class="sy4">;</span>
    va_end<span class="br0">(</span>args<span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>
<span class="br0">{</span>
   tlog<span class="br0">(</span><span class="st0">"logging&nbsp;%d&nbsp;%d&nbsp;%d...<span class="es1">\n</span>"</span>, <span class="nu0">1</span>, <span class="nu0">2</span>, <span class="nu0">3</span><span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span></pre></div></div>
<p>Output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">[10:21:38] logging 1 2 3...</pre></div></div> 
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit&amp;section=3" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-17">
<ul><li> C17 standard (ISO/IEC 9899:2018): 
</li></ul>
<dl><dd><ul><li> 6.7.6.3/9 Function declarators (including prototypes) (p: 96)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.16 Variable arguments &lt;stdarg.h&gt; (p: 197-199)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 6.7.6.3/9 Function declarators (including prototypes) (p: 133)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.16 Variable arguments &lt;stdarg.h&gt; (p: 269-272)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 6.7.5.3/9 Function declarators (including prototypes) (p: 119)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.15 Variable arguments &lt;stdarg.h&gt; (p: 249-252)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 3.5.4.3/5 Function declarators (including prototypes) 
</li></ul>
</dd></dl>
<dl><dd><ul><li> 4.8 VARIABLE ARGUMENTS &lt;stdarg.h&gt; 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;action=edit&amp;section=4" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/language/variadic_arguments.html" title="cpp/language/variadic arguments">C++ documentation</a></span> for <span class=""><span>Variadic arguments</span></span></div>
</td></tr>

</tbody></table>

<!-- 
NewPP limit report
Preprocessor visited node count: 1803/1000000
Preprocessor generated node count: 6249/1000000
Post‐expand include size: 53009/4194304 bytes
Template argument size: 9481/4194304 bytes
Highest expansion depth: 20/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:13990-0!*!0!!en!*!* and timestamp 20250418094646 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;oldid=142118">https://en.cppreference.com/mwiki/index.php?title=c/language/variadic&amp;oldid=142118</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.399 secs. -->
	


</body><!-- Cached 20250418094646 --></html>