<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>Expressions</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--><style>.t-lines > span { display: table-row; }</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_language_expressions skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">Expressions</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<p>An expression is a sequence of <i>operators</i> and their <i>operands</i>, that specifies a computation.
</p><p>Expression evaluation may produce a result (e.g., evaluation of <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">2</span> <span class="sy2">+</span> <span class="nu0">2</span></span></span> produces the result <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">4</span></span></span>), may generate side-effects (e.g. evaluation of <span class="t-c"><span class="mw-geshi c source-c"><a href="../io/fprintf.htm"><span class="kw851">printf</span></a><span class="br0">(</span><span class="st0">"%d"</span>, <span class="nu0">4</span><span class="br0">)</span></span></span> sends the character <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">'4'</span></span></span> to the standard output stream), and may designate objects or functions.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./operators.htm#General"><span class="tocnumber">1</span> <span class="toctext">General</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./operators.htm#Operators"><span class="tocnumber">2</span> <span class="toctext">Operators</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="./operators.htm#Conversions"><span class="tocnumber">2.1</span> <span class="toctext">Conversions</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="./operators.htm#Other"><span class="tocnumber">2.2</span> <span class="toctext">Other</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="./operators.htm#Primary_expressions"><span class="tocnumber">3</span> <span class="toctext">Primary expressions</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="./operators.htm#Constants_and_literals"><span class="tocnumber">3.1</span> <span class="toctext">Constants and literals</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="./operators.htm#Unevaluated_expressions"><span class="tocnumber">4</span> <span class="toctext">Unevaluated expressions</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="./operators.htm#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="./operators.htm#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=1" title="Edit section: General">edit</a>]</span> <span class="mw-headline" id="General">General</span></h4>
<ul><li> <a href="./value_category.htm" title="c/language/value category">value categories</a> (lvalue, non-lvalue object, function designator) classify expressions by their values
</li><li> <a href="./eval_order.htm" title="c/language/eval order">order of evaluation</a> of arguments and subexpressions specifies the order in which intermediate results are obtained
</li></ul>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=2" title="Edit section: Operators">edit</a>]</span> <span class="mw-headline" id="Operators">Operators</span></h3>
<table class="wikitable">

<tbody><tr style="text-align:center">
<th colspan="7">Common operators
</th></tr>
<tr style="text-align:center">
<td><a href="./operator_assignment.htm" title="c/language/operator assignment">assignment</a>
</td>
<td><a href="./operator_incdec.htm" title="c/language/operator incdec">increment<br>decrement</a>
</td>
<td><a href="./operator_arithmetic.htm" title="c/language/operator arithmetic">arithmetic</a>
</td>
<td><a href="./operator_logical.htm" title="c/language/operator logical">logical</a>
</td>
<td><a href="./operator_comparison.htm" title="c/language/operator comparison">comparison</a>
</td>
<td><a href="./operator_member_access.htm" title="c/language/operator member access">member<br>access</a>
</td>
<td><a href="./operator_other.htm" title="c/language/operator other">other</a>
</td></tr>
<tr style="text-align:center">
<td>
<p><span class="t-c"><span class="mw-geshi c source-c">a <span class="sy1">=</span> b<br>
a <span class="sy2">+</span><span class="sy1">=</span> b<br>
a <span class="sy2">-</span><span class="sy1">=</span> b<br>
a <span class="sy2">*</span><span class="sy1">=</span> b<br>
a <span class="sy2">/</span><span class="sy1">=</span> b<br>
a <span class="sy2">%</span><span class="sy1">=</span> b<br>
a <span class="sy3">&amp;</span><span class="sy1">=</span> b<br>
a <span class="sy3">|</span><span class="sy1">=</span> b<br>
a <span class="sy3">^</span><span class="sy1">=</span> b<br>
a <span class="sy1">&lt;&lt;=</span> b<br>
a <span class="sy1">&gt;&gt;=</span> b</span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">++</span>a<br>
<span class="sy2">--</span>a<br>
a<span class="sy2">++</span><br>
a<span class="sy2">--</span></span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">+</span>a<br>
<span class="sy2">-</span>a<br>
a <span class="sy2">+</span> b<br>
a <span class="sy2">-</span> b<br>
a <span class="sy2">*</span> b<br>
a <span class="sy2">/</span> b<br>
a <span class="sy2">%</span> b<br>
~a<br>
a <span class="sy3">&amp;</span> b<br>
a <span class="sy3">|</span> b<br>
a <span class="sy3">^</span> b<br>
a <span class="sy1">&lt;&lt;</span> b<br>
a <span class="sy1">&gt;&gt;</span> b</span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c"><span class="sy3">!</span>a<br>
a <span class="sy3">&amp;&amp;</span> b<br>
a <span class="sy3">||</span> b</span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c">a <span class="sy1">==</span> b<br>
a <span class="sy3">!</span><span class="sy1">=</span> b<br>
a <span class="sy1">&lt;</span> b<br>
a <span class="sy1">&gt;</span> b<br>
a <span class="sy1">&lt;=</span> b<br>
a <span class="sy1">&gt;=</span> b</span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c">a<span class="br0">[</span>b<span class="br0">]</span><br>
<span class="sy2">*</span>a<br>
<span class="sy3">&amp;</span>a<br>
a<span class="sy2">-</span><span class="sy1">&gt;</span>b<br>
a.<span class="me1">b</span></span></span>
</p>
</td>
<td>
<p><span class="t-c"><span class="mw-geshi c source-c">a<span class="br0">(</span>...<span class="br0">)</span><br>
a, b<br>
<span class="br0">(</span>type<span class="br0">)</span> a<br>
a <span class="sy4">?</span> b <span class="sy4">:</span> c<br>
<span class="kw4">sizeof</span></span></span><br><br>
<span class="mw-geshi c source-c">_Alignof</span><br><span class="t-mark-rev t-since-c11">(since C11)</span><br><span class="t-mark-rev t-until-c23">(until C23)</span><br><br>
<span class="mw-geshi c source-c">alignof</span><br><span class="t-mark-rev t-since-c23">(since C23)</span>
</p>
</td></tr>
</tbody></table>
<ul><li> <a href="./operator_precedence.htm" title="c/language/operator precedence">operator precedence</a> defines the order in which operators are bound to their arguments
</li><li> <a href="./operator_alternative.htm" title="c/language/operator alternative">alternative representations</a> are alternative spellings for some operators
</li></ul>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=3" title="Edit section: Conversions">edit</a>]</span> <span class="mw-headline" id="Conversions">Conversions</span></h4>
<ul><li> <a href="./conversion.htm" title="c/language/conversion">Implicit conversions</a> take place when types of operands do not match the expectations of operators
</li><li> <a href="./cast.htm" title="c/language/cast">Casts</a> may be used to explicitly convert values from one type to another.
</li></ul>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=4" title="Edit section: Other">edit</a>]</span> <span class="mw-headline" id="Other">Other</span></h4>
<ul><li> <a href="./constant_expression.htm" title="c/language/constant expression">constant expressions</a> can be evaluated at compile time and used in compile-time context (<span class="t-rev-inl t-since-c99"><span>non-VLA</span><span><span class="t-mark-rev t-since-c99">(since C99)</span></span></span>array sizes, static initializers, etc)
</li></ul>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c11"><td>
<ul><li> <a href="./generic.htm" title="c/language/generic">generic selections</a> can execute different expressions depending on the types of the arguments
</li></ul>
</td>
<td><span class="t-mark-rev t-since-c11">(since C11)</span></td></tr>
</tbody></table>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c99"><td>
<ul><li> Floating-point arithmetic may raise exceptions and report errors as specified in <a href="../numeric/math/math_errhandling.htm" title="c/numeric/math/math errhandling"><tt>math_errhandling</tt></a>
</li><li> The standard <a href="../preprocessor/impl.htm" title="c/preprocessor/impl">#pragmas</a> <code>FENV_ACCESS</code>, <code>FP_CONTRACT</code>, and <code>CX_LIMITED_RANGE</code> as well as the <a href="../types/limits/FLT_EVAL_METHOD.htm" title="c/types/limits/FLT EVAL METHOD">floating-point evaluation precision</a> and <a href="../numeric/fenv/FE_round.htm" title="c/numeric/fenv/FE round">rounding direction</a> control the way floating-point arithmetic are executed.
</li></ul>
</td>
<td><span class="t-mark-rev t-since-c99">(since C99)</span></td></tr>
</tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=5" title="Edit section: Primary expressions">edit</a>]</span> <span class="mw-headline" id="Primary_expressions">Primary expressions</span></h3>
<p>The operands of any operator may be other expressions or they may be <i>primary expressions</i> (e.g. in <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">1</span> <span class="sy2">+</span> <span class="nu0">2</span> <span class="sy2">*</span> <span class="nu0">3</span></span></span>, the operands of operator+ are the subexpression <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">2</span> <span class="sy2">*</span> <span class="nu0">3</span></span></span> and the primary expression <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">1</span></span></span>).
</p><p>Primary expressions are any of the following:
</p>
<div class="t-li1"><span class="t-li">1)</span> Constants and literals (e.g. <span class="t-c"><span class="mw-geshi c source-c"><span class="nu0">2</span></span></span> or <span class="t-c"><span class="mw-geshi c source-c"><span class="st0">"Hello, world"</span></span></span>)</div>
<div class="t-li1"><span class="t-li">2)</span> Suitably declared <a href="./identifiers.htm" title="c/language/identifier">identifiers</a> (e.g. <span class="t-c"><span class="mw-geshi c source-c">n</span></span> or <span class="t-c"><span class="mw-geshi c source-c"><a href="../io/fprintf.htm"><span class="kw851">printf</span></a></span></span>)</div>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c11"><td>
<div class="t-li1"><span class="t-li">3)</span> <a href="./generic.htm" title="c/language/generic">Generic selections</a></div>
</td>
<td><span class="t-mark-rev t-since-c11">(since C11)</span></td></tr>
</tbody></table>
<p>Any expression in parentheses is also classified as a primary expression: this guarantees that the parentheses have higher precedence than any operator.
</p>
<h4><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=6" title="Edit section: Constants and literals">edit</a>]</span> <span class="mw-headline" id="Constants_and_literals">Constants and literals</span></h4>
<p>Constant values of certain types may be embedded in the source code of a C program using specialized expressions known as literals (for lvalue expressions) and constants (for non-lvalue expressions)
</p>
<ul><li> <a href="./integer_constant.htm" title="c/language/integer constant">integer constants</a> are decimal, octal, or hexadecimal numbers of integer type.
</li><li> <a href="./character_constant.htm" title="c/language/character constant">character constants</a> are individual characters of type <span class="mw-geshi c source-c"><span class="kw4">int</span></span> suitable for conversion to a character type or of type <span class="t-rev-inl t-since-c23"><span><span class="mw-geshi c source-c">char8_t</span>,</span><span><span class="t-mark-rev t-since-c23">(since C23)</span></span></span> <span class="t-rev-inl t-since-c11"><span><span class="mw-geshi c source-c">char16_t</span>, <span class="mw-geshi c source-c">char32_t</span>, or</span><span><span class="t-mark-rev t-since-c11">(since C11)</span></span></span> <span class="mw-geshi c source-c"><span class="kw4">wchar_t</span></span>
</li><li> <a href="./floating_constant.htm" title="c/language/floating constant">floating constants</a> are values of type <span class="mw-geshi c source-c"><span class="kw4">float</span></span>, <span class="mw-geshi c source-c"><span class="kw4">double</span></span>, or <span class="mw-geshi c source-c"><span class="kw4">long</span> <span class="kw4">double</span></span>
</li></ul>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c23"><td>
<ul><li> predefined constants <a href="./bool_constant.htm" title="c/language/bool constant"><span class="t-c"><span class="mw-geshi c source-c"><span class="kw2">true</span></span></span>/<span class="t-c"><span class="mw-geshi c source-c"><span class="kw2">false</span></span></span></a> are values of type <span class="mw-geshi c source-c">bool</span>
</li><li> predefined constant <a href="./nullptr.htm" title="c/language/nullptr"><code>nullptr</code></a> is a value of type <span class="t-lc"><a href="../types/nullptr_t.htm" title="c/types/nullptr t">nullptr_t</a></span>
</li></ul>
</td>
<td><span class="t-mark-rev t-since-c23">(since C23)</span></td></tr>
</tbody></table>
<ul><li> <a href="./string_literal.htm" title="c/language/string literal">string literals</a> are sequences of characters of type <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">char</span><span class="br0">[</span><span class="br0">]</span></span></span><span class="t-rev-inl t-since-c23"><span>, <span class="t-c"><span class="mw-geshi c source-c">char8_t<span class="br0">[</span><span class="br0">]</span></span></span></span><span><span class="t-mark-rev t-since-c23">(since C23)</span></span></span><span class="t-rev-inl t-since-c11"><span>, <span class="t-c"><span class="mw-geshi c source-c">char16_t<span class="br0">[</span><span class="br0">]</span></span></span>, <span class="t-c"><span class="mw-geshi c source-c">char32_t<span class="br0">[</span><span class="br0">]</span></span></span>,</span><span><span class="t-mark-rev t-since-c11">(since C11)</span></span></span> or <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">wchar_t</span><span class="br0">[</span><span class="br0">]</span></span></span> that represent null-terminated strings
</li></ul>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c99"><td>
<ul><li> <a href="./compound_literal.htm" title="c/language/compound literal">compound literals</a> are values of struct, union, or array type directly embedded in program code
</li></ul>
</td>
<td><span class="t-mark-rev t-since-c99">(since C99)</span></td></tr>
</tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=7" title="Edit section: Unevaluated expressions">edit</a>]</span> <span class="mw-headline" id="Unevaluated_expressions">Unevaluated expressions</span></h3>
<p>The operands of the <a href="./sizeof.htm" title="c/language/sizeof"><span class="mw-geshi c source-c"><span class="kw4">sizeof</span></span> operator</a> are expressions that are not evaluated<span class="t-rev-inl t-since-c99"><span> (unless they are VLAs)</span><span><span class="t-mark-rev t-since-c99">(since C99)</span></span></span>. Thus, <span class="t-c"><span class="mw-geshi c source-c"><a href="../types/size_t.htm"><span class="kw100">size_t</span></a> n <span class="sy1">=</span> <span class="kw4">sizeof</span><span class="br0">(</span><a href="../io/fprintf.htm"><span class="kw851">printf</span></a><span class="br0">(</span><span class="st0">"%d"</span>, <span class="nu0">4</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span></span></span> does not perform console output.
</p>
<table class="t-rev-begin">
<tbody><tr class="t-rev t-since-c11"><td>
<p>The operands of the <span class="t-rev-inl t-until-c23"><span><a href="./alignof.htm" title="c/language/ Alignof"><code>_Alignof</code></a></span><span><span class="t-mark-rev t-until-c23">(until C23)</span></span></span><span class="t-rev-inl t-since-c23"><span><a href="./alignof.htm" title="c/language/alignof" class="mw-redirect"><code>alignof</code></a></span><span><span class="t-mark-rev t-since-c23">(since C23)</span></span></span> operator, the controlling expression of a <a href="./generic.htm" title="c/language/generic">generic selection</a>, and size expressions of VLAs that are operands of <span class="t-rev-inl t-until-c23"><span><code>_Alignof</code></span><span><span class="t-mark-rev t-until-c23">(until C23)</span></span></span><span class="t-rev-inl t-since-c23"><span><span class="mw-geshi c source-c">alignof</span></span><span><span class="t-mark-rev t-since-c23">(since C23)</span></span></span> are also expressions that are not evaluated.
</p>
</td>
<td><span class="t-mark-rev t-since-c11">(since C11)</span></td></tr>
</tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=8" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-23">
<ul><li> C23 standard (ISO/IEC 9899:2024): 
</li></ul>
<dl><dd><ul><li> 6.5 Expressions (p: TBD)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 6.6 Constant expressions (p: TBD)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-17">
<ul><li> C17 standard (ISO/IEC 9899:2018): 
</li></ul>
<dl><dd><ul><li> 6.5 Expressions (p: 55-75)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 6.6 Constant expressions (p: 76-77)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 6.5 Expressions (p: 76-105)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 6.6 Constant expressions (p: 106-107)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 6.5 Expressions (p: 67-94)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 6.6 Constant expressions (p: 95-96)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 3.3 EXPRESSIONS 
</li></ul>
</dd></dl>
<dl><dd><ul><li> 3.4 CONSTANT EXPRESSIONS 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/language/expressions.html" title="cpp/language/expressions">C++ documentation</a></span> for <span class=""><span>Expressions</span></span></div>
</td></tr>

</tbody></table>

<!-- 
NewPP limit report
Preprocessor visited node count: 3282/1000000
Preprocessor generated node count: 7910/1000000
Post‐expand include size: 69773/4194304 bytes
Template argument size: 12607/4194304 bytes
Highest expansion depth: 19/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:13897-0!*!0!!en!*!* and timestamp 20250418080939 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;oldid=178465">https://en.cppreference.com/mwiki/index.php?title=c/language/expressions&amp;oldid=178465</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.036 secs. -->
	


</body><!-- Cached 20250418081918 --></html>