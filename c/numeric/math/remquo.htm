<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>remquo, remquof, remquol</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit">
<link rel="shortcut icon" href="../../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_numeric_math_remquo skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">remquo, remquof, remquol</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<table class="t-dcl-begin"><tbody>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../../header/math.htm" title="c/header/math"><tt>&lt;math.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">float</span> &nbsp; &nbsp; &nbsp; remquof<span class="br0">(</span> <span class="kw4">float</span> x, <span class="kw4">float</span> y, <span class="kw4">int</span> <span class="sy2">*</span>quo <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (1) </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">double</span> &nbsp; &nbsp; &nbsp;remquo<span class="br0">(</span> <span class="kw4">double</span> x, <span class="kw4">double</span> y, <span class="kw4">int</span> <span class="sy2">*</span>quo <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (2) </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="kw4">long</span> <span class="kw4">double</span> remquol<span class="br0">(</span> <span class="kw4">long</span> <span class="kw4">double</span> x, <span class="kw4">long</span> <span class="kw4">double</span> y, <span class="kw4">int</span> <span class="sy2">*</span>quo <span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td> (3) </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../../header/tgmath.htm" title="c/header/tgmath"><tt>&lt;tgmath.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
<tr class="t-dcl t-since-c99">
<td> <div><span class="mw-geshi c source-c"><span class="co2">#define remquo( x, y, quo )</span></span></div></td>
<td> (4) </td>
<td> <span class="t-mark-rev t-since-c99">(since C99)</span> </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
<div class="t-li1"><span class="t-li">1-3)</span> Computes the floating-point remainder of the division operation <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span> as the <span class="t-lc"><a href="./remainder.htm" title="c/numeric/math/remainder">remainder()</a></span> function does.  Additionally, the sign and at least the three of the last bits of <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span> will be stored in <span class="t-c"><span class="mw-geshi c source-c">quo</span></span>, sufficient to determine the octant of the result within a period.</div>
<div class="t-li1"><span class="t-li">4)</span> Type-generic macro: If any non-pointer argument has type <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">long</span> <span class="kw4">double</span></span></span>, <code>remquol</code> is called. Otherwise, if any non-pointer argument has integer type or has type <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">double</span></span></span>, <code>remquo</code> is called. Otherwise, <code>remquof</code> is called.</div>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./remquo.htm#Parameters"><span class="tocnumber">1</span> <span class="toctext">Parameters</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./remquo.htm#Return_value"><span class="tocnumber">2</span> <span class="toctext">Return value</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="./remquo.htm#Error_handling"><span class="tocnumber">3</span> <span class="toctext">Error handling</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="./remquo.htm#Notes"><span class="tocnumber">4</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="./remquo.htm#Example"><span class="tocnumber">5</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="./remquo.htm#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="./remquo.htm#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=1" title="Edit section: Parameters">edit</a>]</span> <span class="mw-headline" id="Parameters">Parameters</span></h3>
<table class="t-par-begin">


<tbody><tr class="t-par">
<td> x, y
</td>
<td> -
</td>
<td> floating-point values
</td></tr>
<tr class="t-par">
<td> quo
</td>
<td> -
</td>
<td> pointer to an integer value to store the sign and some bits of <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=2" title="Edit section: Return value">edit</a>]</span> <span class="mw-headline" id="Return_value">Return value</span></h3>
<p>If successful, returns the floating-point remainder of the division <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span> as defined in <span class="t-lc"><a href="./remainder.htm" title="c/numeric/math/remainder">remainder</a></span>, and stores, in <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span>quo</span></span>, the sign and at least three of the least significant bits of <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span> (formally, stores a value whose sign is the sign of <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span> and whose magnitude is congruent <span class="texhtml" style="white-space: nowrap;">modulo 2<span class="t-su">n<br></span></span> to the magnitude of the integral quotient of <span class="t-c"><span class="mw-geshi c source-c">x<span class="sy2">/</span>y</span></span>, where <span class="texhtml" style="white-space: nowrap;">n</span> is an implementation-defined integer greater than or equal to <span class="texhtml" style="white-space: nowrap;">3</span>).
</p><p>If <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is zero, the value stored in <span class="t-c"><span class="mw-geshi c source-c"><span class="sy2">*</span>quo</span></span> is unspecified.
</p><p>If a domain error occurs, an implementation-defined value is returned (NaN where supported).
</p><p>If a range error occurs due to underflow, the correct result is returned if subnormals are supported.
</p><p>If <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is zero, but the domain error does not occur, zero is returned.
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=3" title="Edit section: Error handling">edit</a>]</span> <span class="mw-headline" id="Error_handling">Error handling</span></h3>
<p>Errors are reported as specified in <a href="./math_errhandling.htm" title="c/numeric/math/math errhandling"><code>math_errhandling</code></a>.
</p><p>Domain error may occur if <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is zero.
</p><p>If the implementation supports IEEE floating-point arithmetic (IEC 60559),
</p>
<ul><li> The current <a href="../fenv/FE_round.htm" title="c/numeric/fenv/FE round">rounding mode</a> has no effect.
</li><li> <span class="t-lc"><a href="../fenv/FE_exceptions.htm" title="c/numeric/fenv/FE exceptions">FE_INEXACT</a></span> is never raised
</li><li> If <span class="t-c"><span class="mw-geshi c source-c">x</span></span> is ±∞ and <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is not NaN, NaN is returned and <span class="t-lc"><a href="../fenv/FE_exceptions.htm" title="c/numeric/fenv/FE exceptions">FE_INVALID</a></span> is raised
</li><li> If <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is ±0 and <span class="t-c"><span class="mw-geshi c source-c">x</span></span> is not NaN, NaN is returned  and <span class="t-lc"><a href="../fenv/FE_exceptions.htm" title="c/numeric/fenv/FE exceptions">FE_INVALID</a></span> is raised
</li><li> If either <span class="t-c"><span class="mw-geshi c source-c">x</span></span> or <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is NaN, NaN is returned
</li></ul>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=4" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p><a rel="nofollow" class="external text" href="https://pubs.opengroup.org/onlinepubs/9699919799/functions/remquo.html">POSIX requires</a> that a domain error occurs if <span class="t-c"><span class="mw-geshi c source-c">x</span></span> is infinite or <span class="t-c"><span class="mw-geshi c source-c">y</span></span> is zero.
</p><p>This function is useful when implementing periodic functions with the period exactly representable as a floating-point value: when calculating <span class="texhtml" style="white-space: nowrap;">sin(πx)</span> for a very large <span class="t-c"><span class="mw-geshi c source-c">x</span></span>, calling <span class="t-lc"><a href="./sin.htm" title="c/numeric/math/sin">sin</a></span> directly may result in a large error, but if the function argument is first reduced with <code>remquo</code>, the low-order bits of the quotient may be used to determine the sign and the octant of the result within the period, while the remainder may be used to calculate the value with high precision.
</p><p>On some platforms this operation is supported by hardware (and, for example, on Intel CPU, <code>FPREM1</code> leaves exactly 3 bits of precision in the quotient).
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=5" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#include &lt;fenv.h&gt;</span>
<span class="co2">#include &lt;math.h&gt;</span>
<span class="co2">#include &lt;stdio.h&gt;</span>
&nbsp;
<span class="co2">#ifndef __GNUC__</span>
<span class="co2">#pragma STDC FENV_ACCESS ON</span>
<span class="co2">#endif</span>
&nbsp;
<span class="kw4">double</span> cos_pi_x_naive<span class="br0">(</span><span class="kw4">double</span> x<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">const</span> <span class="kw4">double</span> pi <span class="sy1">=</span> <a href="./acos.htm"><span class="kw672">acos</span></a><span class="br0">(</span><span class="sy2">-</span><span class="nu0">1</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw1">return</span> <a href="./cos.htm"><span class="kw669">cos</span></a><span class="br0">(</span>pi <span class="sy2">*</span> x<span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// the period is 2, values are (0;0.5) positive, (0.5;1.5) negative, (1.5,2) positive</span>
<span class="kw4">double</span> cos_pi_x_smart<span class="br0">(</span><span class="kw4">double</span> x<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">const</span> <span class="kw4">double</span> pi <span class="sy1">=</span> <a href="./acos.htm"><span class="kw672">acos</span></a><span class="br0">(</span><span class="sy2">-</span><span class="nu0">1</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw4">int</span> extremum<span class="sy4">;</span>
    <span class="kw4">double</span> rem <span class="sy1">=</span> remquo<span class="br0">(</span>x, <span class="nu0">1</span>, <span class="sy3">&amp;</span>extremum<span class="br0">)</span><span class="sy4">;</span>
    extremum <span class="sy1">=</span> <span class="br0">(</span><span class="kw4">unsigned</span><span class="br0">)</span>extremum <span class="sy2">%</span> <span class="nu0">2</span><span class="sy4">;</span> <span class="co1">// keep 1 bit to determine nearest extremum</span>
    <span class="kw1">return</span> extremum <span class="sy4">?</span> <span class="sy2">-</span><a href="./cos.htm"><span class="kw669">cos</span></a><span class="br0">(</span>pi <span class="sy2">*</span> rem<span class="br0">)</span> <span class="sy4">:</span> <a href="./cos.htm"><span class="kw669">cos</span></a><span class="br0">(</span>pi <span class="sy2">*</span> rem<span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>
<span class="br0">{</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 0.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_naive<span class="br0">(</span><span class="nu16">0.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 1.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_naive<span class="br0">(</span><span class="nu16">1.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 1000000000000.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_naive<span class="br0">(</span><span class="nu16">1000000000000.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 1000000000001.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_naive<span class="br0">(</span><span class="nu16">1000000000001.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 1000000000000.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_smart<span class="br0">(</span><span class="nu16">1000000000000.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"cos(pi * 1000000000001.25) =&nbsp;%f<span class="es1">\n</span>"</span>, cos_pi_x_smart<span class="br0">(</span><span class="nu16">1000000000001.25</span><span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// error handling</span>
    <a href="../fenv/feclearexcept.htm"><span class="kw717">feclearexcept</span></a><span class="br0">(</span><a href="../fenv/FE_exceptions.htm"><span class="kw728">FE_ALL_EXCEPT</span></a><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw4">int</span> quo<span class="sy4">;</span>
    <a href="../../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"remquo(+Inf, 1) =&nbsp;%.1f<span class="es1">\n</span>"</span>, remquo<span class="br0">(</span>INFINITY, <span class="nu0">1</span>, <span class="sy3">&amp;</span>quo<span class="br0">)</span><span class="br0">)</span><span class="sy4">;</span>
    <span class="kw1">if</span> <span class="br0">(</span><a href="../fenv/fetestexcept.htm"><span class="kw718">fetestexcept</span></a><span class="br0">(</span><a href="../fenv/FE_exceptions.htm"><span class="kw731">FE_INVALID</span></a><span class="br0">)</span><span class="br0">)</span>
        <a href="../../io/puts.htm"><span class="kw835">puts</span></a><span class="br0">(</span><span class="st0">"    FE_INVALID raised"</span><span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span></pre></div></div>
<p>Possible output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">cos(pi * 0.25) = 0.707107
cos(pi * 1.25) = -0.707107
cos(pi * 1000000000000.25) = 0.707123
cos(pi * 1000000000001.25) = -0.707117
cos(pi * 1000000000000.25) = 0.707107
cos(pi * 1000000000001.25) = -0.707107 
remquo(+Inf, 1) = -nan
    FE_INVALID raised</pre></div></div> 
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-23">
<ul><li> C23 standard (ISO/IEC 9899:2024): 
</li></ul>
<dl><dd><ul><li> 7.12.10.3 The remquo functions (p: TBD)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.25 Type-generic math &lt;tgmath.h&gt; (p: TBD)
</li></ul>
</dd></dl>
<dl><dd><ul><li> F.10.7.3 The remquo functions (p: TBD)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-17">
<ul><li> C17 standard (ISO/IEC 9899:2018): 
</li></ul>
<dl><dd><ul><li> 7.12.10.3 The remquo functions (p: 186)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.25 Type-generic math &lt;tgmath.h&gt; (p: 272-273)
</li></ul>
</dd></dl>
<dl><dd><ul><li> F.10.7.3 The remquo functions (p: 385)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 7.12.10.3 The remquo functions (p: 255)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.25 Type-generic math &lt;tgmath.h&gt; (p: 373-375)
</li></ul>
</dd></dl>
<dl><dd><ul><li> F.10.7.3 The remquo functions (p: 529)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 7.12.10.3 The remquo functions (p: 236)
</li></ul>
</dd></dl>
<dl><dd><ul><li> 7.22 Type-generic math &lt;tgmath.h&gt; (p: 335-337)
</li></ul>
</dd></dl>
<dl><dd><ul><li> F.9.7.3 The remquo functions (p: 465)
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./div.htm" title="c/numeric/math/div"> <span class="t-lines"><span>div</span><span>ldiv</span><span>lldiv</span></span></a></div><div><span class="t-lines"><span></span><span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span></span></div></div>
</td>
<td>   computes quotient and remainder of integer division  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/numeric/math/dsc_div&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./fmod.htm" title="c/numeric/math/fmod"> <span class="t-lines"><span>fmod</span><span>fmodf</span><span>fmodl</span></span></a></div><div><span class="t-lines"><span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span></span></div></div>
</td>
<td>   computes remainder of the floating-point division operation  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/numeric/math/dsc_fmod&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./remainder.htm" title="c/numeric/math/remainder"> <span class="t-lines"><span>remainder</span><span>remainderf</span><span>remainderl</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span><span><span class="t-mark-rev t-since-c99">(C99)</span></span></span></div></div>
</td>
<td>   computes signed remainder of the floating-point division operation  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/numeric/math/dsc_remainder&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/numeric/math/remquo.html" title="cpp/numeric/math/remquo">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>remquo</span></span></div>
</td></tr>

</tbody></table>

<!-- 
NewPP limit report
Preprocessor visited node count: 13678/1000000
Preprocessor generated node count: 14757/1000000
Post‐expand include size: 430490/4194304 bytes
Template argument size: 83663/4194304 bytes
Highest expansion depth: 20/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:6271-0!*!0!!en!*!* and timestamp 20250317183137 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;oldid=172057">https://en.cppreference.com/mwiki/index.php?title=c/numeric/math/remquo&amp;oldid=172057</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 1.650 secs. -->
	


</body><!-- Cached 20250317183138 --></html>