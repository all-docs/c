<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>Standard library header &lt;stdatomic.h&gt;&nbsp;(C11)</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_header_stdatomic skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading"><span style="font-size:0.7em; line-height:130%">Standard library header</span> &lt;stdatomic.h&gt;&nbsp;<span class="t-mark-rev t-since-c11">(C11)</span></h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<p>This header provides <a href="../thread.html#Atomic_operations" title="c/thread">atomic operations</a>, in particular, it's a part of the <a href="../thread.html" title="c/thread">concurrency support</a> library.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="stdatomic.htm#Atomic_operations"><span class="tocnumber">1</span> <span class="toctext">Atomic operations</span></a>
<ul>
<li class="toclevel-2"><a href="stdatomic.htm#Operations_on_atomic_types"><span class="tocnumber">1.1</span> <span class="toctext">Operations on atomic types</span></a></li>
<li class="toclevel-2"><a href="stdatomic.htm#Flag_type_and_operations"><span class="tocnumber">1.2</span> <span class="toctext">Flag type and operations</span></a></li>
<li class="toclevel-2"><a href="stdatomic.htm#Initialization"><span class="tocnumber">1.3</span> <span class="toctext">Initialization</span></a></li>
<li class="toclevel-2"><a href="stdatomic.htm#Memory_synchronization_ordering"><span class="tocnumber">1.4</span> <span class="toctext">Memory synchronization ordering</span></a></li>
<li class="toclevel-2"><a href="stdatomic.htm#Convenience_type_aliases"><span class="tocnumber">1.5</span> <span class="toctext">Convenience type aliases</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-2"><a href="stdatomic.htm#Synopsis"><span class="tocnumber">2</span> <span class="toctext">Synopsis</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;action=edit&amp;section=1" title="Edit section: Atomic operations">edit</a>]</span> <span class="mw-headline" id="Atomic_operations">Atomic operations</span></h3>
<table class="t-dsc-begin">

<tbody><tr>
<td colspan="2"> <h5> <span class="mw-headline" id="Operations_on_atomic_types"> Operations on atomic types </span></h5>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/ATOMIC_LOCK_FREE_consts.html" title="c/atomic/ATOMIC LOCK FREE consts"> <span class="t-lines"><span>ATOMIC_BOOL_LOCK_FREE</span><span>ATOMIC_CHAR_LOCK_FREE</span><span>ATOMIC_CHAR16_T_LOCK_FREE</span><span>ATOMIC_CHAR32_T_LOCK_FREE</span><span>ATOMIC_WCHAR_T_LOCK_FREE</span><span>ATOMIC_SHORT_LOCK_FREE</span><span>ATOMIC_INT_LOCK_FREE</span><span>ATOMIC_LONG_LOCK_FREE</span><span>ATOMIC_LLONG_LOCK_FREE</span><span>ATOMIC_POINTER_LOCK_FREE</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   indicates that the given atomic type is lock-free  <br> <span class="t-mark">(macro constant)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_ATOMIC_LOCK_FREE_consts&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_is_lock_free.html" title="c/atomic/atomic is lock free"> <span class="t-lines"><span>atomic_is_lock_free</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   indicates whether the atomic object is lock-free  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_is_lock_free&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_store.html" title="c/atomic/atomic store"> <span class="t-lines"><span>atomic_store</span><span>atomic_store_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   stores a value in an atomic object  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_store&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_load.html" title="c/atomic/atomic load"> <span class="t-lines"><span>atomic_load</span><span>atomic_load_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   reads a value from an atomic object  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_load&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_exchange.html" title="c/atomic/atomic exchange"> <span class="t-lines"><span>atomic_exchange</span><span>atomic_exchange_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   swaps a value with the value of an atomic object  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_exchange&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_compare_exchange.html" title="c/atomic/atomic compare exchange"> <span class="t-lines"><span>atomic_compare_exchange_strong</span><span>atomic_compare_exchange_strong_explicit</span><span>atomic_compare_exchange_weak</span><span>atomic_compare_exchange_weak_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   swaps a value with an atomic object if the old value is what is expected, otherwise reads the old value  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_compare_exchange&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_fetch_add.html" title="c/atomic/atomic fetch add"> <span class="t-lines"><span>atomic_fetch_add</span><span>atomic_fetch_add_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   atomic addition  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_fetch_add&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_fetch_sub.html" title="c/atomic/atomic fetch sub"> <span class="t-lines"><span>atomic_fetch_sub</span><span>atomic_fetch_sub_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   atomic subtraction  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_fetch_sub&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_fetch_or.html" title="c/atomic/atomic fetch or"> <span class="t-lines"><span>atomic_fetch_or</span><span>atomic_fetch_or_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   atomic bitwise OR  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_fetch_or&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_fetch_xor.html" title="c/atomic/atomic fetch xor"> <span class="t-lines"><span>atomic_fetch_xor</span><span>atomic_fetch_xor_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   atomic bitwise exclusive OR  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_fetch_xor&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_fetch_and.html" title="c/atomic/atomic fetch and"> <span class="t-lines"><span>atomic_fetch_and</span><span>atomic_fetch_and_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   atomic bitwise AND  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_fetch_and&amp;action=edit">[edit]</a></span>
</td></tr>

<tr>
<td colspan="2"> <h5> <span class="mw-headline" id="Flag_type_and_operations"> Flag type and operations </span></h5>
</td></tr>

<tr class="t-dsc">
<td> <div class="t-dsc-member-div"><div><a href="../atomic/atomic_flag.html" title="c/atomic/atomic flag"> <span class="t-lines"><span>atomic_flag</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>  lock-free atomic boolean flag <br><span class="t-mark">(struct)</span><span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_flag&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_flag_test_and_set.html" title="c/atomic/atomic flag test and set"> <span class="t-lines"><span>atomic_flag_test_and_set</span><span>atomic_flag_test_and_set_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   sets an atomic_flag to true and returns the old value  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_flag_test_and_set&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_flag_clear.html" title="c/atomic/atomic flag clear"> <span class="t-lines"><span>atomic_flag_clear</span><span>atomic_flag_clear_explicit</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   sets an atomic_flag to false  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_flag_clear&amp;action=edit">[edit]</a></span>
</td></tr>

<tr>
<td colspan="2"> <h5> <span class="mw-headline" id="Initialization"> Initialization </span></h5>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_init.html" title="c/atomic/atomic init"> <span class="t-lines"><span>atomic_init</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   initializes an existing atomic object  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_init&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/ATOMIC_VAR_INIT.html" title="c/atomic/ATOMIC VAR INIT"> <span class="t-lines"><span>ATOMIC_VAR_INIT</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span><span><span class="t-mark-rev t-deprecated-c17">(deprecated in C17)</span></span><span><span class="t-mark-rev t-until-c23">(removed in C23)</span></span></span></div></div>
</td>
<td>  initializes a new atomic object <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_ATOMIC_VAR_INIT&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/ATOMIC_FLAG_INIT.html" title="c/atomic/ATOMIC FLAG INIT"> <span class="t-lines"><span>ATOMIC_FLAG_INIT</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   initializes a new <span class="t-c"><span class="mw-geshi c source-c"><a href="../atomic/atomic_flag.html"><span class="kw917">atomic_flag</span></a></span></span>  <br> <span class="t-mark">(macro constant)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_ATOMIC_FLAG_INIT&amp;action=edit">[edit]</a></span>
</td></tr>

<tr>
<td colspan="2"> <h5> <span class="mw-headline" id="Memory_synchronization_ordering"> Memory synchronization ordering </span></h5>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/memory_order.html" title="c/atomic/memory order"> <span class="t-lines"><span>memory_order</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   defines memory ordering constraints  <br> <span class="t-mark">(enum)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_memory_order&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/kill_dependency.html" title="c/atomic/kill dependency"> <span class="t-lines"><span>kill_dependency</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   breaks a dependency chain for <span class="t-c"><span class="mw-geshi c source-c"><a href="../atomic/memory_order.html"><span class="kw912">memory_order_consume</span></a></span></span>  <br> <span class="t-mark">(function macro)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_kill_dependency&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_thread_fence.html" title="c/atomic/atomic thread fence"> <span class="t-lines"><span>atomic_thread_fence</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   generic memory order-dependent fence synchronization primitive   <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_thread_fence&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="../atomic/atomic_signal_fence.html" title="c/atomic/atomic signal fence"> <span class="t-lines"><span>atomic_signal_fence</span></span></a></div><div><span class="t-lines"><span><span class="t-mark-rev t-since-c11">(C11)</span></span></span></div></div>
</td>
<td>   fence between a thread and a signal handler executed in the same thread  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/atomic/dsc_atomic_signal_fence&amp;action=edit">[edit]</a></span>
</td></tr>
</tbody></table>
<table class="t-dsc-begin">


<tbody><tr>
<td colspan="2"> <h5> <span class="mw-headline" id="Convenience_type_aliases"> Convenience type aliases </span></h5>
</td></tr>

<tr class="t-dsc-hitem">
<td> Typedef name
</td>
<td> Full type name
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_bool</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic _Bool</span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_char</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">char</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_schar</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">signed</span> <span class="kw4">char</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uchar</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">unsigned</span> <span class="kw4">char</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_short</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">short</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_ushort</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">unsigned</span> <span class="kw4">short</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">int</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">unsigned</span> <span class="kw4">int</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_long</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">long</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_ulong</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">unsigned</span> <span class="kw4">long</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_llong</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">long</span> <span class="kw4">long</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_ullong</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">unsigned</span> <span class="kw4">long</span> <span class="kw4">long</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_char8_t</code> <span class="t-mark-rev t-since-c23">(C23)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic char8_t</span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_char16_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic char16_t</span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_char32_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic char32_t</span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_wchar_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <span class="kw4">wchar_t</span></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_least8_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw114">int_least8_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_least8_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw128">uint_least8_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_least16_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw115">int_least16_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_least16_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw129">uint_least16_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_least32_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw116">int_least32_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_least32_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw130">uint_least32_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_least64_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw117">int_least64_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_least64_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw131">uint_least64_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_fast8_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw110">int_fast8_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_fast8_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw124">uint_fast8_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_fast16_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw111">int_fast16_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_fast16_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw125">uint_fast16_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_fast32_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw112">int_fast32_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_fast32_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw126">uint_fast32_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_int_fast64_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw113">int_fast64_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uint_fast64_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw127">uint_fast64_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_intptr_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw119">intptr_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uintptr_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw133">uintptr_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_size_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/size_t.html"><span class="kw100">size_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_ptrdiff_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/ptrdiff_t.html"><span class="kw101">ptrdiff_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_intmax_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw118">intmax_t</span></a></span>
</td></tr>


<tr class="t-dsc">
<td> <code>atomic_uintmax_t</code> <span class="t-mark-rev t-since-c11">(C11)</span>
</td>
<td> <span class="mw-geshi c source-c">_Atomic <a href="../types/integer.html"><span class="kw132">uintmax_t</span></a></span>
</td></tr>

</tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;action=edit&amp;section=2" title="Edit section: Synopsis">edit</a>]</span> <span class="mw-headline" id="Synopsis">Synopsis</span></h3>
<table class="metadata plainlinks ambox mbox-small-left ambox-notice" style=""><tbody><tr><td class="mbox-empty-cell"></td><td class="mbox-text" style="">This section is incomplete<br>Reason: add more from 7.17 Atomics &lt;stdatomic.h&gt; and B.16 Atomics &lt;stdatomic.h&gt; </td></tr></tbody></table>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#define __STDC_VERSION_STDATOMIC_H__ 202311L</span>
&nbsp;
<span class="kw4">void</span> <a href="../atomic/atomic_init.html"><span class="kw935">atomic_init</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> obj, <span class="coMULTI">/*C*/</span> value<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*type*/</span> <a href="../atomic/kill_dependency.html"><span class="kw930">kill_dependency</span></a><span class="br0">(</span><span class="coMULTI">/*type*/</span> y<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_thread_fence.html"><span class="kw957">atomic_thread_fence</span></a><span class="br0">(</span><a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_signal_fence.html"><span class="kw958">atomic_signal_fence</span></a><span class="br0">(</span><a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_is_lock_free.html"><span class="kw936">atomic_is_lock_free</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">volatile</span> A<span class="sy2">*</span> obj<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_store.html"><span class="kw937">atomic_store</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span> desired<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_store.html"><span class="kw938">atomic_store_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span> desired, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <a href="../atomic/atomic_load.html"><span class="kw939">atomic_load</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">volatile</span> A<span class="sy2">*</span> object<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <a href="../atomic/atomic_load.html"><span class="kw940">atomic_load_explicit</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">volatile</span> A<span class="sy2">*</span> object, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <a href="../atomic/atomic_exchange.html"><span class="kw941">atomic_exchange</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span> desired<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <a href="../atomic/atomic_exchange.html"><span class="kw942">atomic_exchange_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span> desired, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_compare_exchange.html"><span class="kw945">atomic_compare_exchange_strong</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span><span class="sy2">*</span> expected, <span class="coMULTI">/*C*/</span> desired<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_compare_exchange.html"><span class="kw946">atomic_compare_exchange_strong_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span><span class="sy2">*</span> expected,
<span class="coMULTI">/*C*/</span> desired, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> success, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> failure<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_compare_exchange.html"><span class="kw943">atomic_compare_exchange_weak</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span><span class="sy2">*</span> expected, <span class="coMULTI">/*C*/</span> desired<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_compare_exchange.html"><span class="kw944">atomic_compare_exchange_weak_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, <span class="coMULTI">/*C*/</span><span class="sy2">*</span> expected,
<span class="coMULTI">/*C*/</span> desired, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> success, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> failure<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <span class="coMULTI">/*atomic_fetch_key*/</span><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, M operand<span class="br0">)</span><span class="sy4">;</span>
<span class="coMULTI">/*C*/</span> <span class="coMULTI">/*atomic_fetch_key_explicit*/</span><span class="br0">(</span><span class="kw4">volatile</span> A<span class="sy2">*</span> object, M operand, <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_flag_test_and_set.html"><span class="kw931">atomic_flag_test_and_set</span></a><span class="br0">(</span><span class="kw4">volatile</span> <a href="../atomic/atomic_flag.html"><span class="kw917">atomic_flag</span></a><span class="sy2">*</span> object<span class="br0">)</span><span class="sy4">;</span>
bool <a href="../atomic/atomic_flag_test_and_set.html"><span class="kw932">atomic_flag_test_and_set_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> <a href="../atomic/atomic_flag.html"><span class="kw917">atomic_flag</span></a><span class="sy2">*</span> object,
<a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_flag_clear.html"><span class="kw933">atomic_flag_clear</span></a><span class="br0">(</span><span class="kw4">volatile</span> <a href="../atomic/atomic_flag.html"><span class="kw917">atomic_flag</span></a><span class="sy2">*</span> object<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../atomic/atomic_flag_clear.html"><span class="kw934">atomic_flag_clear_explicit</span></a><span class="br0">(</span><span class="kw4">volatile</span> <a href="../atomic/atomic_flag.html"><span class="kw917">atomic_flag</span></a><span class="sy2">*</span> object,
                                <a href="../atomic/memory_order.html"><span class="kw910">memory_order</span></a> order<span class="br0">)</span><span class="sy4">;</span></pre></div></div>

<!-- 
NewPP limit report
Preprocessor visited node count: 6864/1000000
Preprocessor generated node count: 12566/1000000
Post‐expand include size: 191346/4194304 bytes
Template argument size: 42822/4194304 bytes
Highest expansion depth: 22/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:23232-0!*!0!!en!*!* and timestamp 20250215221331 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;oldid=180140">https://en.cppreference.com/mwiki/index.php?title=c/header/stdatomic&amp;oldid=180140</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="https://en.cppreference.com/w/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://en.cppreference.com/w/Category%253ATodo_with_reason.html" title="Category:Todo with reason">Todo with reason</a></li></ul></div></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 1.452 secs. -->
	


</body><!-- Cached 20250215221331 --></html>