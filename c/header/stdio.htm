<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>Standard library header &lt;stdio.h&gt;</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdio&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdio&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_header_stdio skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading"><span style="font-size:0.7em; line-height:130%">Standard library header</span> &lt;stdio.h&gt;</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<p>This header is part of <a href="../io.html" title="c/io">input/output</a> library, providing generic file operation support and supplies I/O functions that work with narrow characters.
</p>
<table class="metadata plainlinks ambox mbox-small-left ambox-notice" style=""><tbody><tr><td class="mbox-empty-cell"></td><td class="mbox-text" style="">This section is incomplete<br>Reason: 7.23 Input/output &lt;stdio.h&gt;; copy/share subset of <a href="../io.html" title="c/io">c/io</a> </td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdio&amp;action=edit&amp;section=1" title="Edit section: Synopsis">edit</a>]</span> <span class="mw-headline" id="Synopsis">Synopsis</span></h3>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#define __STDC_VERSION_STDIO_H__ 202311L</span>
&nbsp;
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy4">;</span>
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> <a href="../types/size_t.html"><span class="kw100">size_t</span></a><span class="sy4">;</span>
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy4">;</span>
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> <a href="../io/fpos_t.html"><span class="kw885">fpos_t</span></a><span class="sy4">;</span>
&nbsp;
<span class="co2">#define NULL         /* see description */</span>
<span class="co2">#define _IOFBF       /* see description */</span>
<span class="co2">#define _IOLBF       /* see description */</span>
<span class="co2">#define _IONBF       /* see description */</span>
<span class="co2">#define BUFSIZ       /* see description */</span>
<span class="co2">#define EOF          /* see description */</span>
<span class="co2">#define FOPEN_MAX    /* see description */</span>
<span class="co2">#define FILENAME_MAX /* see description */</span>
<span class="co2">#define L_tmpnam     /* see description */</span>
<span class="co2">#define SEEK_CUR     /* see description */</span>
<span class="co2">#define SEEK_END     /* see description */</span>
<span class="co2">#define SEEK_SET     /* see description */</span>
<span class="co2">#define TMP_MAX      /* see description */</span>
&nbsp;
<span class="co2">#define stdin        /* see description */</span>
<span class="co2">#define stdout       /* see description */</span>
<span class="co2">#define stderr       /* see description */</span>
&nbsp;
<span class="co2">#define _PRINTF_NAN_LEN_MAX /* see description */</span>
&nbsp;
<span class="kw4">int</span> <a href="../io/remove.html"><span class="kw880">remove</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> filename<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/rename.html"><span class="kw881">rename</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> old, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> new<span class="br0">)</span><span class="sy4">;</span>
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <a href="../io/tmpfile.html"><span class="kw882">tmpfile</span></a><span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">char</span><span class="sy2">*</span> <a href="../io/tmpnam.html"><span class="kw883">tmpnam</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> s<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fclose.html"><span class="kw822">fclose</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fflush.html"><span class="kw821">fflush</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <a href="../io/fopen.html"><span class="kw819">fopen</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> filename, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> mode<span class="br0">)</span><span class="sy4">;</span>
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <a href="../io/freopen.html"><span class="kw820">freopen</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> filename, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> mode,
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../io/setbuf.html"><span class="kw823">setbuf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> buf<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/setvbuf.html"><span class="kw824">setvbuf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> buf, <span class="kw4">int</span> mode, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> size<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fprintf.html"><span class="kw851">printf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fscanf.html"><span class="kw845">scanf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fprintf.html"><span class="kw854">snprintf</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fprintf.html"><span class="kw853">sprintf</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fscanf.html"><span class="kw847">sscanf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfprintf.html"><span class="kw856">vfprintf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfscanf.html"><span class="kw849">vfscanf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfprintf.html"><span class="kw855">vprintf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfscanf.html"><span class="kw848">vscanf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfprintf.html"><span class="kw858">vsnprintf</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfprintf.html"><span class="kw857">vsprintf</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/vfscanf.html"><span class="kw850">vsscanf</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fgetc.html"><span class="kw827">fgetc</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">char</span><span class="sy2">*</span> <a href="../io/fgets.html"><span class="kw829">fgets</span></a><span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">int</span> n, <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/putc.html"><span class="kw830">fputc</span></a><span class="br0">(</span><span class="kw4">int</span> c, <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fputs.html"><span class="kw832">fputs</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fgetc.html"><span class="kw828">getc</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/getchar.html"><span class="kw833">getchar</span></a><span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/putc.html"><span class="kw831">putc</span></a><span class="br0">(</span><span class="kw4">int</span> c, <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/putchar.html"><span class="kw835">putchar</span></a><span class="br0">(</span><span class="kw4">int</span> c<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/puts.html"><span class="kw836">puts</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> s<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/ungetc.html"><span class="kw837">ungetc</span></a><span class="br0">(</span><span class="kw4">int</span> c, <a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<a href="../types/size_t.html"><span class="kw100">size_t</span></a> <a href="../io/fread.html"><span class="kw825">fread</span></a><span class="br0">(</span><span class="kw4">void</span><span class="sy2">*</span> <span class="kw4">restrict</span> ptr, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> size, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> nmemb,
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<a href="../types/size_t.html"><span class="kw100">size_t</span></a> <a href="../io/fwrite.html"><span class="kw826">fwrite</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">void</span><span class="sy2">*</span> <span class="kw4">restrict</span> ptr, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> size, <a href="../types/size_t.html"><span class="kw100">size_t</span></a> nmemb,
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fgetpos.html"><span class="kw872">fgetpos</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <a href="../io/fpos_t.html"><span class="kw885">fpos_t</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> pos<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fseek.html"><span class="kw873">fseek</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream, <span class="kw4">long</span> <span class="kw4">int</span> offset, <span class="kw4">int</span> whence<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fsetpos.html"><span class="kw874">fsetpos</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream, <span class="kw4">const</span> <a href="../io/fpos_t.html"><span class="kw885">fpos_t</span></a><span class="sy2">*</span> pos<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">long</span> <span class="kw4">int</span> <a href="../io/ftell.html"><span class="kw871">ftell</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../io/rewind.html"><span class="kw875">rewind</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../io/clearerr.html"><span class="kw876">clearerr</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/feof.html"><span class="kw877">feof</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/ferror.html"><span class="kw878">ferror</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">void</span> <a href="../io/perror.html"><span class="kw879">perror</span></a><span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> s<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fprintf.html"><span class="kw852">fprintf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> <a href="../io/fscanf.html"><span class="kw846">fscanf</span></a><span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span></pre></div></div>
<p>Only if the implementation defines <span class="t-c"><span class="mw-geshi c source-c">__STDC_LIB_EXT1__</span></span> and additionally the user
code defines <span class="t-c"><span class="mw-geshi c source-c">__STDC_WANT_LIB_EXT1__</span></span> before any inclusion of <code>&lt;stdio.h&gt;</code>:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#if defined(__STDC_WANT_LIB_EXT1__)</span>
&nbsp;
<span class="co2">#define L_tmpnam_s /* see description */</span>
<span class="co2">#define TMP_MAX_S  /* see description */</span>
&nbsp;
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> errno_t<span class="sy4">;</span>
<span class="kw1">typedef</span> <span class="coMULTI">/* see description */</span> rsize_t<span class="sy4">;</span>
&nbsp;
errno_t tmpfile_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span><span class="sy2">*</span> <span class="kw4">restrict</span> streamptr<span class="br0">)</span><span class="sy4">;</span>
errno_t tmpnam_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> s, rsize_t maxsize<span class="br0">)</span><span class="sy4">;</span>
errno_t fopen_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span><span class="sy2">*</span> <span class="kw4">restrict</span> streamptr,
<span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> filename, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> mode<span class="br0">)</span><span class="sy4">;</span>
errno_t freopen_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span><span class="sy2">*</span> <span class="kw4">restrict</span> newstreamptr,
<span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> filename, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> mode,
<a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> fprintf_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> fscanf_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> printf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> scanf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> snprintf_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, rsize_t n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> sprintf_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, rsize_t n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> sscanf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, ...<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vfprintf_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vfscanf_s<span class="br0">(</span><a href="../io/FILE.html"><span class="kw884">FILE</span></a><span class="sy2">*</span> <span class="kw4">restrict</span> stream, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vprintf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vscanf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vsnprintf_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, rsize_t n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vsprintf_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, rsize_t n, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">int</span> vsscanf_s<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> s, <span class="kw4">const</span> <span class="kw4">char</span><span class="sy2">*</span> <span class="kw4">restrict</span> format, va_list arg<span class="br0">)</span><span class="sy4">;</span>
<span class="kw4">char</span><span class="sy2">*</span> gets_s<span class="br0">(</span><span class="kw4">char</span><span class="sy2">*</span> s, rsize_t n<span class="br0">)</span><span class="sy4">;</span>
<span class="co2">#endif</span></pre></div></div>

<!-- 
NewPP limit report
Preprocessor visited node count: 2787/1000000
Preprocessor generated node count: 6495/1000000
Post‐expand include size: 51852/4194304 bytes
Template argument size: 13347/4194304 bytes
Highest expansion depth: 17/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:23240-0!*!0!*!*!*!* and timestamp 20250215221102 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/header/stdio&amp;oldid=180214">https://en.cppreference.com/mwiki/index.php?title=c/header/stdio&amp;oldid=180214</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="https://en.cppreference.com/w/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://en.cppreference.com/w/Category%253ATodo_with_reason.html" title="Category:Todo with reason">Todo with reason</a></li></ul></div></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.455 secs. -->
	


</body><!-- Cached 20250215221102 --></html>