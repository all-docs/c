<!DOCTYPE html><html lang="en" dir="ltr" class="client-nojs"><head>
<title>signal</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.21.2">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit">
<link rel="edit" title="Edit" href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit">
<link rel="shortcut icon" href="../../../favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="../../../mwiki/opensearch_desc.php" title="cppreference.com (en)">
<link rel="EditURI" type="application/rsd+xml" href="../../../mwiki/api.php@action=rsd">
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="https://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom">

<meta name="ResourceLoaderDynamicStyles" content="">

<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>




<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_program_signal skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        
        <!-- /header -->
        <!-- content -->
<style type="text/css">
#carbonads {
  display: block;
  overflow: hidden;
  position: absolute;
  text-align: center;
  left: -170px;
  max-width: 150px;
  border-radius: 4px;
  border: solid 1px hsla(0, 0%, 0%, .1);
  background-color: hsl(0, 0%, 98%);
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,
  Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
}

#carbonads a {
  color: inherit;
  text-decoration: none;
}

#carbonads a:hover {
  color: inherit;
}

#carbonads span {
  position: relative;
  display: block;
  overflow: hidden;
}

.carbon-img {
  display: block;
  margin-bottom: 8px;
  max-width: 150px;
  line-height: 1;
}

.carbon-img img {
  display: block;
  margin: 0 auto;
  max-width: 150px !important;
  width: 150px;
  height: auto;
}

.carbon-text {
  display: block;
  padding: 0 1em 8px;
}

.carbon-poweredby {
  display: block;
  padding: 8px 12px;
  background: repeating-linear-gradient(-45deg, transparent, transparent 5px, hsla(0, 0%, 0%, .025) 5px, hsla(0, 0%, 0%, .025) 10px) hsla(203, 11%, 95%, .4);
  text-transform: uppercase;
  letter-spacing: .5px;
  font-weight: 600;
  font-size: 9px;
  line-height: 1;
}
html { font-variant-ligatures: no-common-ligatures; }
</style>
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->




                <h1 id="firstHeading" class="firstHeading">signal</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
<table class="t-dcl-begin"><tbody>
<tr class="t-dsc-header">
<td> <div>Defined in header <code><a href="../header/signal.htm" title="c/header/signal"><tt>&lt;signal.h&gt;</tt></a></code>
 </div></td>
<td></td>
<td></td>
</tr>
<tr class="t-dcl">
<td class="t-dcl-nopad"> <div><span class="mw-geshi c source-c"><span class="kw4">void</span> <span class="br0">(</span><span class="sy2">*</span>signal<span class="br0">(</span> <span class="kw4">int</span> sig, <span class="kw4">void</span> <span class="br0">(</span><span class="sy2">*</span>handler<span class="br0">)</span> <span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td class="t-dcl-nopad">  </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
<p>Sets the error handler for signal <code>sig</code>. The signal handler can be set so that default handling will occur, signal is ignored, or a user-defined function is called.
</p><p>When signal handler is set to a function and a signal occurs, it is implementation defined whether <span class="t-c"><span class="mw-geshi c source-c">signal<span class="br0">(</span>sig, <a href="./SIG_strategies.htm"><span class="kw499">SIG_DFL</span></a><span class="br0">)</span></span></span> will be executed immediately before the start of signal handler. Also, the implementation can prevent some implementation-defined set of signals from occurring while the signal handler runs.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="./signal.htm#Parameters"><span class="tocnumber">1</span> <span class="toctext">Parameters</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="./signal.htm#Return_value"><span class="tocnumber">2</span> <span class="toctext">Return value</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="./signal.htm#Signal_handler"><span class="tocnumber">3</span> <span class="toctext">Signal handler</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="./signal.htm#Notes"><span class="tocnumber">4</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="./signal.htm#Example"><span class="tocnumber">5</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="./signal.htm#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="./signal.htm#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=1" title="Edit section: Parameters">edit</a>]</span> <span class="mw-headline" id="Parameters">Parameters</span></h3>
<table class="t-par-begin">


<tbody><tr class="t-par">
<td>  sig
</td>
<td> -
</td>
<td>  the signal to set the signal handler to. It can be an implementation-defined value or one of the following values:
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./SIG_types.htm" title="c/program/SIG types"> <span class="t-lines"><span>SIGABRT</span><span>SIGFPE</span><span>SIGILL</span><span>SIGINT</span><span>SIGSEGV</span><span>SIGTERM</span></span></a></div></div>
</td>
<td>   defines signal types <br> <span class="t-mark">(macro constant)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/program/dsc_SIG_types&amp;action=edit">[edit]</a></span>
</td></tr>
</tbody></table>
</td></tr>
<tr class="t-par">
<td>  handler
</td>
<td> -
</td>
<td>  the signal handler. This must be one of the following:
<ul><li><span class="t-lc"><a href="./SIG_strategies.htm" title="c/program/SIG strategies">SIG_DFL</a></span> macro. The signal handler is set to default signal handler.
</li><li><span class="t-lc"><a href="./SIG_strategies.htm" title="c/program/SIG strategies">SIG_IGN</a></span> macro. The signal is ignored.
</li><li>pointer to a function. The signature of the function must be equivalent to the following:
</li></ul>
<table class="t-dcl-begin"><tbody>

<tr class="t-dcl">
<td class="t-dcl-nopad"> <div><span class="mw-geshi c source-c"><span class="kw4">void</span> fun<span class="br0">(</span><span class="kw4">int</span> sig<span class="br0">)</span><span class="sy4">;</span></span></div></td>
<td class="t-dcl-nopad">  </td>
<td class="t-dcl-nopad">  </td>
</tr>
<tr class="t-dcl-sep"><td></td><td></td><td></td></tr>
</tbody></table>
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=2" title="Edit section: Return value">edit</a>]</span> <span class="mw-headline" id="Return_value">Return value</span></h3>
<p>Previous signal handler on success or <span class="t-lc"><a href="./SIG_ERR.htm" title="c/program/SIG ERR">SIG_ERR</a></span> on failure (setting a signal handler can be disabled on some implementations).
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=3" title="Edit section: Signal handler">edit</a>]</span> <span class="mw-headline" id="Signal_handler">Signal handler</span></h3>
<p>The following limitations are imposed on the user-defined function that is installed as a signal handler.
</p><p>If the user defined function returns when handling <span class="t-lc"><a href="./SIG_types.htm" title="c/program/SIG types">SIGFPE</a></span>, <span class="t-lc"><a href="./SIG_types.htm" title="c/program/SIG types">SIGILL</a></span> or <span class="t-lc"><a href="./SIG_types.htm" title="c/program/SIG types">SIGSEGV</a></span>, the behavior is undefined.
</p><p>If the signal handler is called as a result of <span class="t-lc"><a href="./abort.htm" title="c/program/abort">abort</a></span> or <span class="t-lc"><a href="./raise.htm" title="c/program/raise">raise</a></span>, the behavior is undefined if the signal handler calls <span class="t-lc"><a href="./raise.htm" title="c/program/raise">raise</a></span>.
</p><p>If the signal handler is called NOT as a result of <span class="t-lc"><a href="./abort.htm" title="c/program/abort">abort</a></span> or <span class="t-lc"><a href="./raise.htm" title="c/program/raise">raise</a></span> (in other words, the signal handler is <i>asynchronous</i>), the behavior is undefined if
</p>
<ul><li> the signal handler calls any function within the standard library, except
</li></ul>
<dl><dd><ul><li> <span class="t-lc"><a href="./abort.htm" title="c/program/abort">abort</a></span>
</li><li> <span class="t-lc"><a href="./_Exit.htm" title="c/program/ Exit">_Exit</a></span>
</li><li> <span class="t-lc"><a href="./quick_exit.htm" title="c/program/quick exit">quick_exit</a></span>
</li><li> <code>signal</code> with the first argument being the number of the signal currently handled (async handler can re-register itself, but not other signals). 
</li><li> atomic functions from <a href="../thread.htm#Atomic_operations" title="c/thread"><code>&lt;stdatomic.h&gt;</code></a> if the atomic arguments are lock-free
</li><li> <span class="t-lc"><a href="../atomic/atomic_is_lock_free.htm" title="c/atomic/atomic is lock free">atomic_is_lock_free</a></span> (with any kind of atomic arguments)
</li></ul>
</dd></dl>
<ul><li> the signal handler refers to any object with static <span class="t-rev-inl t-since-c11"><span>or thread-local</span><span><span class="t-mark-rev t-since-c11">(since C11)</span></span></span> <a href="../language/storage_class_specifiers.htm" title="c/language/storage duration">storage duration</a> <span class="t-rev-inl t-since-c11"><span>that is not a lock-free <a href="../language/atomic.htm" title="c/language/atomic">atomic</a></span><span><span class="t-mark-rev t-since-c11">(since C11)</span></span></span> other than by assigning to a static <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">volatile</span> <a href="./sig_atomic_t.htm"><span class="kw498">sig_atomic_t</span></a></span></span>.
</li></ul>
<p>On entry to the signal handler, the state of the floating-point environment and the values of all objects is unspecified, except for
</p>
<ul><li> objects of type <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">volatile</span> <a href="./sig_atomic_t.htm"><span class="kw498">sig_atomic_t</span></a></span></span>
</li><li> objects of lock-free atomic types <span class="t-mark-rev t-since-c11">(since C11)</span>
</li><li> side effects made visible through <span class="t-lc"><a href="../atomic/atomic_signal_fence.htm" title="c/atomic/atomic signal fence">atomic_signal_fence</a></span> <span class="t-mark-rev t-since-c11">(since C11)</span>
</li></ul>
<p>On return from a signal handler, the value of any object modified by the signal handler that is not <span class="t-c"><span class="mw-geshi c source-c"><span class="kw4">volatile</span> <a href="./sig_atomic_t.htm"><span class="kw498">sig_atomic_t</span></a></span></span> or lock-free atomic<span class="t-mark-rev t-since-c11">(since C11)</span> is undefined.
</p><p>The behavior is undefined if <span class="t-c"><span class="mw-geshi c source-c">signal</span></span> is used in a multithreaded program. It is not required to be thread-safe.
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=4" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>POSIX requires that <code>signal</code> is thread-safe, and <a rel="nofollow" class="external text" href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_04">specifies a list of async-signal-safe library functions</a> that may be called from any signal handler.
</p><p>Besides <code>abort</code> and <code>raise</code>, POSIX specifies that <code>kill</code>, <code>pthread_kill</code>, and <code>sigqueue</code> generate synchronous signals.
</p><p>POSIX recommends <a rel="nofollow" class="external text" href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/sigaction.html"><code>sigaction</code></a> instead of <code>signal</code>, due to its underspecified behavior and significant implementation variations, regarding signal delivery while a signal handler is executed.
</p>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=5" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#include &lt;signal.h&gt;</span>
<span class="co2">#include &lt;stdio.h&gt;</span>
&nbsp;
<span class="kw4">volatile</span> <a href="./sig_atomic_t.htm"><span class="kw498">sig_atomic_t</span></a> gSignalStatus<span class="sy4">;</span>
&nbsp;
<span class="kw4">void</span> signal_handler<span class="br0">(</span><span class="kw4">int</span> signal<span class="br0">)</span>
<span class="br0">{</span>
  gSignalStatus <span class="sy1">=</span> signal<span class="sy4">;</span>
<span class="br0">}</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>
<span class="br0">{</span>
  signal<span class="br0">(</span><a href="./SIG_types.htm"><span class="kw505">SIGINT</span></a>, signal_handler<span class="br0">)</span><span class="sy4">;</span>
&nbsp;
  <a href="../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"SignalValue:&nbsp;%d<span class="es1">\n</span>"</span>, gSignalStatus<span class="br0">)</span><span class="sy4">;</span>
  <a href="../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"Sending signal:&nbsp;%d<span class="es1">\n</span>"</span>, <a href="./SIG_types.htm"><span class="kw505">SIGINT</span></a><span class="br0">)</span><span class="sy4">;</span>
  <a href="./raise.htm"><span class="kw497">raise</span></a><span class="br0">(</span><a href="./SIG_types.htm"><span class="kw505">SIGINT</span></a><span class="br0">)</span><span class="sy4">;</span>
  <a href="../io/fprintf.htm"><span class="kw850">printf</span></a><span class="br0">(</span><span class="st0">"SignalValue:&nbsp;%d<span class="es1">\n</span>"</span>, gSignalStatus<span class="br0">)</span><span class="sy4">;</span>
<span class="br0">}</span></pre></div></div>
<p>Output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">SignalValue: 0
Sending signal: 2
SignalValue: 2</pre></div></div> 
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-17">
<ul><li> C17 standard (ISO/IEC 9899:2018): 
</li></ul>
<dl><dd><ul><li> 7.14.1.1 The signal function (p: 193-194)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 7.14.1.1 The signal function (p: 266-267)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 7.14.1.1 The signal function (p: 247-248)
</li></ul>
</dd></dl>
</div>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 4.7.1.1 The signal function 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tbody><tr class="t-dsc">
<td>  <div class="t-dsc-member-div"><div><a href="./raise.htm" title="c/program/raise"> <span class="t-lines"><span>raise</span></span></a></div></div>
</td>
<td>   runs the signal handler for particular signal  <br> <span class="t-mark">(function)</span> <span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="https://en.cppreference.com/mwiki/index.php?title=Template:c/program/dsc_raise&amp;action=edit">[edit]</a></span>
</td></tr>

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="https://en.cppreference.com/w/cpp/utility/program/signal.html" title="cpp/utility/program/signal">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>signal</span></span></div>
</td></tr>

</tbody></table>

<!-- 
NewPP limit report
Preprocessor visited node count: 3208/1000000
Preprocessor generated node count: 8972/1000000
Post‐expand include size: 73148/4194304 bytes
Template argument size: 11880/4194304 bytes
Highest expansion depth: 21/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:6183-0!*!0!!en!*!* and timestamp 20250418080003 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;oldid=140330">https://en.cppreference.com/mwiki/index.php?title=c/program/signal&amp;oldid=140330</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id="catlinks" class="catlinks catlinks-allhidden"></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        
        <!-- /footer -->
        



<!-- Served in 0.562 secs. -->
	


</body><!-- Cached 20250418080003 --></html>